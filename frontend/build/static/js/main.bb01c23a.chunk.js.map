{"version":3,"sources":["store.js","reducers/productReducers.js","constants/productConstant.js","reducers/cartReducer.js","constants/cartConstant.js","reducers/userReducer.js","constants/userConstant.js","reducers/orderReducers.js","constants/orderConstants.js","components/SearchBox.js","actions/userAction.js","components/Header.js","components/Footer.js","components/Loader.js","components/Message.js","components/Rating.js","components/Product.js","components/Paginate.js","components/Meta.js","actions/productAction.js","components/ProductCarousel.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartAction.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderAction.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentMethodScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","serviceWorker.js","index.js"],"names":["reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","createProduct","updateProduct","productReview","getTopProducts","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userProfileUpdate","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","getMyOrders","myOrders","orderLists","orderlists","orderMark","userList","users","middleware","thunk","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","className","Button","variant","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","message","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Row","Col","Loader","Spinner","animation","role","style","width","height","margin","display","Message","children","Alert","defaultProps","Rating","text","color","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Paginate","Pagination","Array","keys","key","active","Meta","description","keywords","Helmet","content","listProducts","pageNumber","listProductDetails","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","HomeScreen","match","params","sm","md","lg","xl","ProductScreen","qty","setQty","setRating","comment","setComment","loadingReview","errorReview","successReview","alert","ListGroup","countInStock","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","location","search","Number","split","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingMyOrders","errorMyOrders","console","log","put","updateUserProfile","Table","striped","bordered","hover","reponsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentMethodScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimal","num","Math","round","itemPrice","shippingPrice","taxPrice","index","age","createOrderActions","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingMark","successMark","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","href","amount","onSuccess","paymentResult","orderPayActions","orderMarkActions","UserListScreen","successDelete","deleteHandler","confirm","delete","userDeleteAction","responsive","UserEditScreen","userId","setisAdmin","loadingUpdate","errorUpdate","successUpdate","userUpdateAction","ProductListScreen","loadingCreated","successCreated","errorCreated","productCreate","loadingDelete","errorDelete","count","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProductAction","File","custom","OrderListScreen","class","App","path","component","exact","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"iMAoBMA,EAAUC,0BAAgB,CAC5BC,YCM8B,WAAuC,IAAtCC,EAAqC,uDAA7B,CAAEC,SAAU,IAAMC,EAAW,uCAEpE,OAAQA,EAAOC,MACX,IC7B4B,uBD8BxB,MAAO,CAAEC,SAAS,EAAMH,SAAU,IACtC,IC9B4B,uBD+BxB,MAAO,CACHG,SAAS,EAAOH,SAAUC,EAAOG,QAAQJ,SAAUK,MACnDJ,EAAOG,QAAQC,MAAOC,KAAML,EAAOG,QAAQE,MAEnD,IClC2B,sBDmCvB,MAAO,CAAEH,SAAS,EAAOI,MAAON,EAAOG,SAC3C,QACI,OAAOL,IDlBfS,eCuBiC,WAAkD,IAAjDT,EAAgD,uDAAxC,CAAEU,QAAS,CAAEC,QAAS,KAAOT,EAAW,uCAE9E,OAAQA,EAAOC,MACX,ICzC2B,0BD0C3B,OAAO,aAAEC,SAAS,GAASJ,GAC/B,IC1C+B,0BD2C3B,MAAO,CAAEI,SAAS,EAAOM,QAASR,EAAOG,SAC7C,IC3C8B,yBD4CzB,MAAO,CAAED,SAAS,EAAOI,MAAON,EAAOG,SAC5C,IC5C6B,wBD6CzB,MAAO,CAACK,QAAS,IACrB,QACI,OAAOV,IDlCfY,cCuCgC,WAAyB,IAAxBZ,EAAuB,uDAAf,GAAIE,EAAW,uCAEpD,OAAQA,EAAOC,MACX,ICpD0B,yBDqD1B,MAAO,CAAEC,SAAS,GACtB,ICrD8B,yBDsD1B,MAAO,CAAEA,SAAS,EAAOS,SAAS,GACtC,ICtD6B,wBDuDzB,MAAO,CAAET,SAAS,EAAOI,MAAON,EAAOG,SAC3C,QACI,OAAOL,IDhDfc,cCqDgC,WAAyB,IAAxBd,EAAuB,uDAAf,GAAIE,EAAW,uCAEpD,OAAQA,EAAOC,MACX,IC9D0B,yBD+D1B,MAAO,CAAEC,SAAS,GACtB,IC/D8B,yBDgE1B,MAAO,CAAEA,SAAS,EAAOS,SAAS,EAAMH,QAASR,EAAOG,SAC5D,IChE6B,wBDiEzB,MAAO,CAAED,SAAS,EAAOI,MAAON,EAAOG,SAC3C,ICjE4B,uBDkExB,MAAO,GACX,QACI,OAAOL,IDhEfe,cCqEgC,WAAqC,IAApCf,EAAmC,uDAA3B,CAAEU,QAAQ,IAAMR,EAAW,uCAEhE,OAAQA,EAAOC,MACX,ICzE0B,yBD0E1B,MAAO,CAAEC,SAAS,GACtB,IC1E8B,yBD2E1B,MAAO,CAAEA,SAAS,EAAOS,SAAS,EAAMH,QAASR,EAAOG,SAC5D,IC3E6B,wBD4EzB,MAAO,CAAED,SAAS,EAAOI,MAAON,EAAOG,SAC3C,IC5E4B,uBD6ExB,MAAO,GACX,QACI,OAAOL,IDhFfgB,cCqFgC,WAAyB,IAAxBhB,EAAuB,uDAAf,GAAIE,EAAW,uCAExD,OAAQA,EAAOC,MACX,ICpFqC,gCDqFjC,MAAO,CAAEC,SAAS,GACtB,ICrFqC,gCDsFjC,MAAO,CAAEA,SAAS,EAAOS,SAAS,GACtC,ICtFoC,+BDuFhC,MAAO,CAAET,SAAS,EAAOI,MAAON,EAAOG,SAC3C,ICvFmC,8BDwF/B,MAAO,GACX,QACI,OAAOL,IDhGfiB,eCqG0B,WAAsC,IAArCjB,EAAoC,uDAA5B,CAAEC,SAAU,IAAKC,EAAW,uCAE/D,OAAQA,EAAOC,MACX,IC/FmC,8BDgG/B,MAAO,CAAEC,SAAS,EAAMH,SAAS,IACrC,IChGmC,8BDiG/B,MAAO,CAAEG,SAAS,EAAOH,SAAUC,EAAOG,SAC9C,ICjGkC,6BDkG9B,MAAO,CAAED,SAAS,EAAOI,MAAON,EAAOG,SAC3C,QACI,OAAOL,ID9GfkB,KGtBuB,WAA6D,IAA5DlB,EAA2D,uDAAnD,CAAEmB,UAAW,GAAIC,gBAAiB,IAAMlB,EAAW,uCACnF,OAAQA,EAAOC,MACX,ICRqB,gBDSjB,IAAMkB,EAAOnB,EAAOG,QACdiB,EAAYtB,EAAMmB,UAAUI,MAAK,SAAAC,GAAC,OAAIA,EAAEd,UAAYW,EAAKX,WAG/D,OAAIY,EACO,2BACAtB,GADP,IAEImB,UAAWnB,EAAMmB,UAAUM,KAAI,SAAAD,GAAC,OAAIA,EAAEd,UAAYY,EAAUZ,QAAUW,EAAOG,OAI1E,2BACAxB,GADP,IAEImB,UAAU,GAAD,mBAAMnB,EAAMmB,WAAZ,CAAuBE,MAI5C,ICzBwB,mBD0BpB,kCACOrB,GADP,IAEImB,UAAWnB,EAAMmB,UAAUO,QAAO,SAAAF,GAAC,OAAIA,EAAEd,UAAYR,EAAOG,aAGpE,IC9BkC,6BD+B9B,OAAO,2BACAL,GADP,IAEIoB,gBAAiBlB,EAAOG,UAEhC,IClCgC,2BDmC5B,OAAO,2BACAL,GADP,IAEI2B,cAAezB,EAAOG,UAE9B,QACI,OAAOL,IHdf4B,UKZ4B,WAA0B,IAAzB5B,EAAwB,uDAAhB,GAAKE,EAAW,uCAErD,OAAQA,EAAOC,MACX,ICpB0B,qBDqBtB,MAAO,CAAEC,SAAS,GACtB,ICrB0B,qBDsBtB,MAAO,CAAEA,SAAS,EAAOyB,SAAU3B,EAAOG,SAC9C,ICtByB,oBDuBrB,MAAO,CAAED,SAAS,EAAOI,MAAON,EAAOG,SAC3C,ICvBmB,cDwBf,MAAO,GACX,QACI,OAAOL,ILCf8B,aKI+B,WAAyB,IAAxB9B,EAAuB,uDAAf,GAAIE,EAAW,uCAEvD,OAAQA,EAAOC,MACX,IC/B6B,wBDgCzB,MAAO,CAAEC,SAAS,GACtB,IChC6B,wBDiCzB,MAAO,CAAEA,SAAS,EAAOyB,SAAU3B,EAAOG,SAC9C,ICjC4B,uBDkCxB,MAAO,CAAED,SAAS,EAAOI,MAAON,EAAOG,SAC3C,QACI,OAAOL,ILbf+B,YKkB8B,WAAkC,IAAjC/B,EAAgC,uDAAxB,CAAEgC,KAAK,IAAM9B,EAAW,uCAE/D,OAAQA,EAAOC,MACX,ICvC4B,uBDwCxB,OAAO,2BAAKH,GAAZ,IAAmBI,SAAS,IAChC,ICxC4B,uBDyCxB,MAAO,CAAEA,SAAS,EAAO4B,KAAM9B,EAAOG,SAC1C,ICzC2B,uBD0CvB,MAAO,CAAED,SAAS,EAAOI,MAAON,EAAOG,SAC3C,IC1C0B,sBD2CtB,MAAO,CAAE2B,KAAM,IACnB,QACI,OAAOhC,IL7BfiC,kBKkCoC,WAA0B,IAAzBjC,EAAwB,uDAAhB,GAAKE,EAAW,uCAE7D,OAAQA,EAAOC,MACX,ICrCmC,8BDsC/B,MAAO,CAAEC,SAAS,GACtB,ICtCmC,8BDuC/B,MAAO,CAAEA,SAAS,EAAOS,SAAS,EAAMgB,SAAU3B,EAAOG,SAC7D,ICvCkC,8BDwC9B,MAAO,CAAED,SAAS,EAAOI,MAAON,EAAOG,SAC3C,QACI,OAAOL,IL3CfkC,WK+D6B,WAAyB,IAAxBlC,EAAuB,uDAAf,GAAIE,EAAW,uCAErD,OAAQA,EAAOC,MACX,IC3E2B,sBD4EvB,MAAO,CAAEC,SAAS,GACtB,IC5E2B,sBD6EvB,MAAO,CAAEA,SAAS,EAAOS,SAAS,GACtC,IC7E0B,uBD8EtB,MAAO,CAAET,SAAS,EAAOI,MAAON,EAAOG,SAC3C,QACI,OAAOL,ILxEfmC,WK6E6B,WAAmC,IAAlCnC,EAAiC,uDAAzB,CAAEgC,KAAM,IAAM9B,EAAW,uCAE/D,OAAQA,EAAOC,MACX,IC5E2B,sBD6EvB,MAAO,CAAEC,SAAS,GACtB,IC7E2B,sBD8EvB,MAAO,CAAEA,SAAS,EAAOS,SAAS,GACtC,IC9E0B,sBD+EtB,MAAO,CAAET,SAAS,EAAOI,MAAON,EAAOG,SAC3C,IC/EyB,oBDgFrB,MAAO,CACH2B,KAAM,IAEd,QACI,OAAOhC,IL1FfoC,YO1B8B,WAAyB,IAAxBpC,EAAuB,uDAAf,GAAIE,EAAW,uCACtD,OAAQA,EAAOC,MACX,ICX4B,uBDYxB,MAAO,CAAEC,SAAS,GACtB,ICZ4B,uBDaxB,MAAO,CAAEA,SAAS,EAAOS,SAAS,EAAMwB,MAAOnC,EAAOG,SAC1D,ICb2B,sBDcvB,MAAO,CAACD,SAAS,EAAOS,SAAS,EAAOwB,MAAOnC,EAAOG,SAC1D,QACI,OAAOL,IPkBfsC,aOb+B,WAA2E,IAA1EtC,EAAyE,uDAAjE,CAACI,SAAS,EAAMmC,WAAY,GAAInB,gBAAgB,IAAMlB,EAAW,uCACzG,OAAQA,EAAOC,MACX,ICjB6B,wBDkBzB,OAAO,2BAAKH,GAAZ,IAAmBI,SAAS,IAChC,IClB6B,wBDoB7B,ICnB4B,uBDoBxB,MAAO,CAAEA,SAAS,EAAQiC,MAAOnC,EAAOG,SAC5C,QACI,OAAOL,IPKfwC,SOC2B,WAAyB,IAAxBxC,EAAuB,uDAAf,GAAIE,EAAW,uCACnD,OAAQA,EAAOC,MACX,ICvByB,oBDwBrB,MAAO,CAAEC,SAAS,GACtB,ICxByB,oBDyBrB,MAAO,CAAEA,SAAS,EAAOS,SAAS,GACtC,ICzBwB,mBD0BpB,MAAO,CAAEL,MAAON,EAAOG,SAC3B,IC1BuB,kBD2BnB,MAAO,GACX,QACI,OAAOL,IPXfyC,YOiB8B,WAAqC,IAApCzC,EAAmC,uDAA3B,CAAC0C,SAAU,IAAKxC,EAAW,uCAClE,OAAQA,EAAOC,MACX,ICnCkC,6BDoC9B,MAAO,CAAEC,SAAS,GACtB,ICpCkC,6BDqC9B,MAAO,CAAEA,SAAS,EAAOsC,SAAUxC,EAAOG,SAC9C,ICrCiC,4BDsC7B,MAAO,CAAEG,MAAON,EAAOG,SAC3B,ICtCgC,2BDuC5B,MAAO,CAAEqC,SAAU,IACvB,QACI,OAAO1C,IP3Bf2C,WOiC4B,WAAyC,IAAxC3C,EAAuC,uDAA/B,CAAE4C,WAAY,IAAM1C,EAAW,uCACpE,OAAQA,EAAOC,MACX,ICtEyB,oBDuErB,MAAO,CAAEC,SAAS,GACtB,ICvEyB,oBDwErB,MAAO,CAAEA,SAAS,EAAOwC,WAAY1C,EAAOG,SAChD,ICxEwB,mBDyEpB,MAAO,CAAEG,MAAON,EAAOG,SAG3B,QACI,OAAOL,IP3Cf6C,UOiD4B,WAAyB,IAAxB7C,EAAuB,uDAAf,GAAIE,EAAW,uCACpD,OAAQA,EAAOC,MACX,IC/E0B,qBDgFtB,MAAO,CAAEC,SAAS,GACtB,IChF0B,qBDiFtB,MAAO,CAAEA,SAAS,EAAOS,SAAS,GACtC,ICjFyB,oBDkFrB,MAAO,CAAEL,MAAON,EAAOG,SAC3B,IClFwB,oBDmFpB,MAAO,GACX,QACI,OAAOL,IP3Df8C,SKwC2B,WAAoC,IAAnC9C,EAAkC,uDAA1B,CAAE+C,MAAO,IAAM7C,EAAW,uCAE9D,OAAQA,EAAOC,MACX,ICjEyB,oBDkErB,MAAO,CAAEC,SAAS,GACtB,IClEyB,oBDmErB,MAAO,CAAEA,SAAS,EAAO2C,MAAO7C,EAAOG,SAC3C,ICnEwB,mBDoEpB,MAAO,CAAED,SAAS,EAAOI,MAAON,EAAOG,SAC3C,QACI,OAAOL,ML/CbgD,EAAa,CAACC,KAIdC,EAAuBC,aAAaC,QAAQ,aAAeC,KAAKC,MAAMH,aAAaC,QAAQ,cAAgB,GAC3GG,EAAsBJ,aAAaC,QAAQ,YAAcC,KAAKC,MAAMH,aAAaC,QAAQ,aAAe,KAGxGI,EAAe,CACjBtC,KAAM,CACFC,UAAW+B,EACX9B,gBAL2B+B,aAAaC,QAAQ,mBAAqBC,KAAKC,MAAMH,aAAaC,QAAQ,oBAAsB,IAO/HxB,UAAW,CAAEC,SAAU0B,IAQZE,EAHDC,sBAAY7D,EAAS2D,EAAcG,8BAAoBC,kBAAe,WAAf,EAAmBZ,K,kGSrCzEa,MAtBf,YAAiC,IAAZC,EAAW,EAAXA,QAAW,EACEC,mBAAS,IADX,mBACrBC,EADqB,KACZC,EADY,KAU5B,OACI,kBAACC,EAAA,EAAD,CAAMC,SATY,SAACC,GACnBA,EAAEC,iBACEL,EAAQM,OACRR,EAAQS,KAAR,kBAAwBP,IAExBF,EAAQS,KAAK,MAIcC,QAAM,GACjC,kBAACN,EAAA,EAAKO,QAAN,CAActE,KAAK,OAAOuE,KAAK,IAAIC,SAAU,SAACP,GAAD,OAAOH,EAAWG,EAAEQ,OAAOC,QACxEC,YAAY,qBAAqBC,UAAU,oBAE3C,kBAACC,EAAA,EAAD,CAAQ7E,KAAK,SAAS8E,QAAQ,kBAAkBF,UAAU,OAA1D,Y,wCC2ECG,EAAiB,SAACC,GAAD,8CAAQ,WAAOC,EAAUC,GAAjB,uBAAAC,EAAA,sEAE9BF,EAAS,CACLjF,KJnFwB,yBIgFE,EAMMkF,IAAdxD,EANQ,EAMrBD,UAAaC,SAChB0D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY5D,EAAS6D,SAVZ,SAaPC,IAAMC,IAAN,qBAAwBT,GAAMI,GAbvB,gBAatBM,EAbsB,EAatBA,KAGRT,EAAS,CACLjF,KJhGwB,uBIiGxBE,QAASwF,IAlBiB,kDAwB9BT,EAAS,CACLjF,KJvGuB,uBIwGvBE,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,QACzC,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UA3BhB,0DAAR,yDCxBfC,MA7Df,WAGE,IAAMZ,EAAWa,cAGTpE,EADUqE,aAAY,SAAAlG,GAAK,OAAIA,EAAM4B,aACrCC,SASV,OAAO,gCACP,kBAACsE,EAAA,EAAD,CAAQC,GAAG,OAAOnB,QAAQ,OAAOoB,OAAO,KAAKC,kBAAgB,GACrD,kBAACC,EAAA,EAAD,KACJ,kBAAC,gBAAD,CAAeC,GAAG,KACb,kBAACL,EAAA,EAAOM,MAAR,iBAEP,kBAACN,EAAA,EAAOO,OAAR,CAAeC,gBAAc,qBACzB,kBAACR,EAAA,EAAOS,SAAR,CAAiBzB,GAAG,oBAClB,kBAAC,IAAD,CAAO0B,OAAQ,gBAAG/C,EAAH,EAAGA,QAAH,OAAiB,kBAAC,EAAD,CAAWA,QAASA,OACxD,kBAACgD,EAAA,EAAD,CAAK/B,UAAU,WACb,kBAAC,gBAAD,CAAeyB,GAAG,SACd,kBAACM,EAAA,EAAIC,KAAL,KAAW,uBAAGhC,UAAU,yBAAxB,SAEClD,EACC,kBAACmF,EAAA,EAAD,CAAaC,MAAOpF,EAAS6C,KAAMS,GAAG,YACpC,kBAAC,gBAAD,CAAeqB,GAAG,YAChB,kBAACQ,EAAA,EAAYE,KAAb,iBAEF,kBAACF,EAAA,EAAYE,KAAb,CAAkBC,QAzBR,WACpB/B,ED0BkB,uCAAM,WAAOA,GAAP,SAAAE,EAAA,sDACxBnC,aAAaiE,WAAW,YACxBhC,EAAS,CACLjF,KJ3CmB,gBI6CvBiF,EAAS,CACLjF,KFxBgC,6BE0BpCiF,EAAS,CACLjF,KJpC0B,wBI2BN,2CAAN,yDCFR,WAID,kBAAC,gBAAD,CAAeqG,GAAK,UACvB,kBAACM,EAAA,EAAIC,KAAL,KAAU,uBAAGhC,UAAU,gBAAvB,YAEClD,GAAYA,EAASwF,SACpB,kBAACL,EAAA,EAAD,CAAaC,MAAM,QAAQ9B,GAAG,YAC5B,kBAAC,gBAAD,CAAeqB,GAAG,mBAChB,kBAACQ,EAAA,EAAYE,KAAb,eAEF,kBAAC,gBAAD,CAAeV,GAAG,sBAChB,kBAACQ,EAAA,EAAYE,KAAb,kBAEA,kBAAC,gBAAD,CAAeV,GAAG,qBAClB,kBAACQ,EAAA,EAAYE,KAAb,4B,iBCxCDI,MAdf,WACI,OAAO,gCACH,kBAACf,EAAA,EAAD,KACI,kBAACgB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKzC,UAAU,oBAAf,6C,SCID0C,MARf,WACI,OACI,kBAACC,EAAA,EAAD,CAASC,UAAU,SAASC,KAAK,SAASC,MAAO,CAACC,MAAM,QAASC,OAAQ,QAASC,OAAQ,OAAQC,QAAS,UACvG,0BAAMlD,UAAU,WAAhB,gB,SCHNmD,EAAU,SAAC,GAA2B,IAAzBjD,EAAwB,EAAxBA,QAASkD,EAAe,EAAfA,SACxB,OACI,kBAACC,EAAA,EAAD,CAAOnD,QAASA,GACXkD,IAIbD,EAAQG,aAAe,CACnBpD,QAAS,QAEEiD,Q,SCTf,SAASI,EAAT,GAAwC,IAAtBzD,EAAqB,EAArBA,MAAO0D,EAAc,EAAdA,KAAMC,EAAQ,EAARA,MAC3B,OACI,yBAAKzD,UAAU,UACX,8BACA,uBAAG8C,MAAO,CAACW,SAAQzD,UAAWF,GAAS,EAAI,cAAgBA,GAAS,GAAM,uBAAyB,iBAEjG,8BACF,uBAAGgD,MAAO,CAACW,SAAQzD,UAAWF,GAAS,EAAI,cAAgBA,GAAS,IAAM,uBAAyB,iBAEjG,8BACF,uBAAGgD,MAAO,CAACW,SAAQzD,UAAWF,GAAS,EAAI,cAAgBA,GAAS,IAAM,uBAAyB,iBAEjG,8BACF,uBAAGgD,MAAO,CAACW,SAAQzD,UAAWF,GAAS,EAAI,cAAgBA,GAAS,IAAM,uBAAyB,iBAEjG,8BACF,uBAAGgD,MAAO,CAACW,SAAQzD,UAAWF,GAAS,EAAI,cAAgBA,GAAS,IAAM,uBAAyB,iBAEnG,kCAAQ0D,GAAQA,IAK5BD,EAAOD,aAAe,CAClBG,MAAO,WASIF,QCNAG,MAzBf,YAA+B,IAAZ/H,EAAW,EAAXA,QACf,OACI,kBAACgI,EAAA,EAAD,CAAM3D,UAAU,oBACZ,kBAAC,OAAD,CAAMyB,GAAE,kBAAa9F,EAAQiI,MACzB,kBAACD,EAAA,EAAKE,IAAN,CAAUC,IAAKnI,EAAQoI,MAAO7D,QAAQ,SAG1C,kBAACyD,EAAA,EAAKK,KAAN,KACG,kBAAC,OAAD,CAAMvC,GAAE,kBAAa9F,EAAQiI,MACxB,kBAACD,EAAA,EAAKM,MAAN,CAAYC,GAAG,OAAM,gCAChBvI,EAAQgE,QAGjB,kBAACgE,EAAA,EAAKQ,KAAN,CAAWD,GAAG,OACX,kBAAC,EAAD,CAAQpE,MAAOnE,EAAQyI,OAAQZ,KAAI,UAAK7H,EAAQ0I,WAAb,eAEtC,kBAACV,EAAA,EAAKQ,KAAN,CAAWD,GAAG,MAAd,IACUvI,EAAQ2I,U,SCNnBC,EAdE,SAAC,GAAkD,IAAhDhJ,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,KAAwC,IAAlC8G,eAAkC,aAAjBrD,eAAiB,MAAT,GAAS,EAC/D,OAAO1D,EAAQ,GACX,kBAACiJ,EAAA,EAAD,KACK,YAAIC,MAAMlJ,GAAOmJ,QAAQhI,KAAI,SAAAD,GAAC,OAC3B,kBAAC,gBAAD,CAAekI,IAAKlI,EAAI,EAAGgF,GAAKa,EAAD,6BACc7F,EAAE,GADLwC,EAAO,kBAAcA,EAAd,iBAA8BxC,EAAI,GAAlC,gBACpCA,EAAI,IACb,kBAAC+H,EAAA,EAAWrC,KAAZ,CAAiByC,OAAQnI,EAAE,IAAMjB,GAAOiB,EAAE,S,QCNxDoI,EAAO,SAAC,GAAqC,IAAnC3C,EAAkC,EAAlCA,MAAO4C,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,SAChC,OACI,kBAACC,EAAA,EAAD,KACI,+BAAQ9C,GACR,0BAAMvC,KAAK,cAAcsF,QAASH,IAClC,0BAAMnF,KAAK,WAAWsF,QAASF,MAI3CF,EAAKvB,aAAe,CAChBpB,MAAO,qBACP4C,YAAa,sCACbC,SAAU,kCAECF,Q,oBCJFK,GAAe,eAACjG,EAAD,uDAAW,GAAIkG,EAAf,uDAA4B,GAA5B,8CAAmC,WAAM9E,GAAN,iBAAAE,EAAA,sEAGnDF,EAAS,CAAEjF,KjBfa,yBiBY2B,SAI5BwF,IAAMC,IAAN,gCAAmC5B,EAAnC,uBAAyDkG,IAJ7B,gBAI3CrE,EAJ2C,EAI3CA,KAGRT,EAAS,CACLjF,KjBnBoB,uBiBoBpBE,QAASwF,IATsC,gDAanDT,EAAS,CACLjF,KjBxBmB,sBiByBnBE,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,QACpC,KAAMD,SAASD,KAAKE,QAAS,KAAMA,UAhBC,yDAAnC,uDAsBfoE,GAAqB,SAAChF,GAAD,8CAAQ,WAAOC,GAAP,iBAAAE,EAAA,sEAGlCF,EAAS,CAAEjF,KjB/BoB,4BiB4BG,SAIXwF,IAAMC,IAAN,wBAA2BT,IAJhB,gBAI1BU,EAJ0B,EAI1BA,KAGRT,EAAS,CACLjF,KjBnC2B,0BiBoC3BE,QAASwF,IATqB,gDAalCT,EAAS,CACLjF,KjBxC0B,yBiByC1BE,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,QACzC,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UAhBZ,yDAAR,uDCAnBqE,GAzBS,WACpB,IAAMhF,EAAWa,cACXhF,EAAiBiF,aAAY,SAAAlG,GAAK,OAAGA,EAAMiB,kBACzCb,EAA6Ba,EAA7Bb,QAASI,EAAoBS,EAApBT,MAAOP,EAAagB,EAAbhB,SAMxB,OAJAoK,qBAAU,WACNjF,EDwKuB,uCAAM,WAAMA,GAAN,iBAAAE,EAAA,sEAGzBF,EAAS,CAAEjF,KjBvJoB,gCiBoJN,SAIFwF,IAAMC,IAAN,qBAJE,gBAIjBC,EAJiB,EAIjBA,KAGRT,EAAS,CACLjF,KjB3J2B,8BiB4J3BE,QAASwF,IATY,gDAazBT,EAAS,CACLjF,KjBhK0B,6BiBiK1BE,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,QACpC,KAAMD,SAASD,KAAKE,QAAS,KAAMA,UAhBzB,yDAAN,yDCvKzB,CAACX,IAEIhF,EAAU,kBAAC,EAAD,MAAaI,EAAQ,kBAAC,EAAD,CAASyE,QAAQ,UAAUzE,GAC7D,kBAAC8J,GAAA,EAAD,CAAUC,MAAM,QAAQxF,UAAU,WAC7B9E,EAASwB,KAAI,SAAAf,GAAO,OACjB,kBAAC4J,GAAA,EAASpD,KAAV,CAAewC,IAAKhJ,EAAQiI,KACxB,kBAAC,OAAD,CAAMnC,GAAE,oBAAe9F,EAAQiI,MAC3B,kBAAC6B,GAAA,EAAD,CAAO3B,IAAKnI,EAAQoI,MAAO2B,IAAK/J,EAAQgE,KAAMgG,OAAK,IACnD,kBAACJ,GAAA,EAASK,QAAV,CAAkB5F,UAAU,oBACxB,4BAAKrE,EAAQgE,KAAb,MAAsBhE,EAAQ2I,MAA9B,aC4BbuB,OAzCf,YAAgC,IAAVC,EAAS,EAATA,MACZ7G,EAAU6G,EAAMC,OAAO9G,QACvBkG,EAAaW,EAAMC,OAAOZ,YAAc,EAIxC9E,EAAWa,cAGXlG,EAAcmG,aAAY,SAAAlG,GAAK,OAAIA,EAAMD,eACvCK,EAA0CL,EAA1CK,QAASI,EAAiCT,EAAjCS,MAAOP,EAA0BF,EAA1BE,SAAUK,EAAgBP,EAAhBO,MAAOC,EAASR,EAATQ,KASzC,OANA8J,qBAAU,WACNjF,EAAS6E,GAAajG,EAASkG,MAChC,CAAC9E,EAAUpB,EAASkG,IAKnB,oCACA,kBAAC,EAAD,MACElG,EAA+B,kBAAC,OAAD,CAAMwC,GAAG,IAAIzB,UAAU,gBAAvB,WAArB,kBAAC,GAAD,MACR,8CACC3E,EAAW,kBAAC,EAAD,MAAcI,EAAS,kBAAC,EAAD,CAASyE,QAAQ,UAAUzE,GAC1D,oCACA,kBAAC+G,EAAA,EAAD,KACKtH,EAASwB,KAAI,SAAAf,GAAO,OACjB,kBAAC8G,EAAA,EAAD,CAAKkC,IAAKhJ,EAAQiI,IAAKoC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC7C,kBAAC,EAAD,CAASxK,QAASA,SAI1B,kBAAC,EAAD,CAAUJ,MAAOA,EAAOC,KAAMA,EAAMyD,QAASA,GAAoB,Q,UCmJtEmH,GAtLO,SAAC,GAAwB,IAAtBrH,EAAqB,EAArBA,QAAS+G,EAAY,EAAZA,MAAY,EAGpB9G,mBAAS,GAHW,mBAGnCqH,EAHmC,KAG9BC,EAH8B,OAMdtH,mBAAS,GANK,mBAMnCoF,EANmC,KAM3BmC,EAN2B,OAOZvH,mBAAS,IAPG,mBAOnCwH,EAPmC,KAO1BC,EAP0B,KASpCpG,EAAWa,cAEXxF,EAAiByF,aAAY,SAAAlG,GAAK,OAAIA,EAAMS,kBAC1CL,EAA4BK,EAA5BL,QAASI,EAAmBC,EAAnBD,MAAOE,EAAYD,EAAZC,QAIhBmB,EADUqE,aAAY,SAAAlG,GAAK,OAAIA,EAAM4B,aACrCC,SAGFb,EAAgBkF,aAAY,SAAAlG,GAAK,OAAIA,EAAMgB,iBAChCyK,EAA6DzK,EAAtEZ,QAA+BsL,EAAuC1K,EAA9CR,MAA6BmL,EAAiB3K,EAA1BH,QAEpDwJ,qBAAU,WACFsB,IACAC,MAAM,oBACNN,EAAU,GACVE,EAAW,IACXpG,EAAS,CAAEjF,KpBLoB,iCoBOnCiF,EAAS+E,GAAmBU,EAAMC,OAAO3F,OAC1C,CAACC,EAAUyF,EAAOc,IAgBrB,OACI,oCACI,kBAAC,OAAD,CAAM5G,UAAU,qBAAqByB,GAAG,KAAxC,WAGCpG,EAAU,kBAAC,EAAD,MAAaI,EAAQ,kBAAC,EAAD,CAASyE,QAAQ,UAAjB,IAA4BzE,EAA5B,KAC5B,oCACI,kBAAC,EAAD,CAAMyG,MAAOvG,EAAQgE,OACzB,kBAAC6C,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKwD,GAAI,GACL,kBAACR,GAAA,EAAD,CAAO3B,IAAKnI,EAAQoI,MAAO2B,IAAK/J,EAAQgE,KAAMgG,OAAK,KAEvD,kBAAClD,EAAA,EAAD,CAAKwD,GAAI,GACL,kBAACa,GAAA,EAAD,CAAW5G,QAAQ,SACf,kBAAC4G,GAAA,EAAU3E,KAAX,KACI,4BAAKxG,EAAQgE,OAGjB,kBAACmH,GAAA,EAAU3E,KAAX,KACI,kBAAC,EAAD,CAAQrC,MAAOnE,EAAQyI,OAAQZ,KAAI,UAAK7H,EAAQ0I,WAAb,eAGvC,kBAACyC,GAAA,EAAU3E,KAAX,gBACaxG,EAAQ2I,OAGrB,kBAACwC,GAAA,EAAU3E,KAAX,oBAEIxG,EAAQmJ,eAKpB,kBAACrC,EAAA,EAAD,KACI,kBAACkB,EAAA,EAAD,KACI,kBAACmD,GAAA,EAAD,CAAW5G,QAAQ,SACf,kBAAC4G,GAAA,EAAU3E,KAAX,KACI,kBAACK,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,eAGA,kBAACA,EAAA,EAAD,SACM9G,EAAQ2I,SAKtB,kBAACwC,GAAA,EAAU3E,KAAX,KACI,kBAACK,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,gBAGA,kBAACA,EAAA,EAAD,KACK9G,EAAQoL,aAAe,EAAI,WAAa,kBAMpDpL,EAAQoL,aAAe,GACpB,kBAACD,GAAA,EAAU3E,KAAX,KACI,kBAACK,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,YACA,kBAACA,EAAA,EAAD,KACI,kBAACtD,EAAA,EAAKO,QAAN,CAAcwE,GAAG,SAASpE,MAAOuG,EAAKzG,SAAU,SAACP,GAAD,OAC5CiH,EAAOjH,EAAEQ,OAAOC,SACf,YAAI2E,MAAM9I,EAAQoL,cAAcrC,QAAQhI,KAAI,SAAAD,GAAC,OAC1C,4BAAQkI,IAAKlI,EAAI,EAAGqD,MAAOrD,EAAI,GAA/B,IAAoCA,EAAI,UAQhE,kBAACqK,GAAA,EAAU3E,KAAX,KACI,kBAAClC,EAAA,EAAD,CAAQD,UAAU,gBAAgB5E,KAAK,SAASgH,QAzFvD,WACrBrD,EAAQS,KAAR,gBAAsBsG,EAAMC,OAAO3F,GAAnC,gBAA6CiG,KAwF0DW,SAAmC,IAAzBrL,EAAQoL,cAA7F,oBAOpB,kBAACvE,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKwD,GAAI,GACP,8CAC4B,IAA3BtK,EAAQC,QAAQqL,QAAgB,kBAAC,EAAD,CAAS/G,QAAQ,UAAjB,kBACjC,kBAAC4G,GAAA,EAAD,CAAW5G,QAAQ,SACZvE,EAAQC,QAAQc,KAAI,SAAAwK,GAAM,OAC3B,kBAACJ,GAAA,EAAU3E,KAAX,CAAgBwC,IAAKuC,EAAOtD,KACxB,gCAASsD,EAAOvH,MAChB,kBAAC,EAAD,CAAQG,MAAOoH,EAAO9C,SACrB,2BAAI8C,EAAOC,UAAUC,UAAU,EAAG,KAClC,2BAAIF,EAAOV,aAGpB,kBAACM,GAAA,EAAU3E,KAAX,KACI,uDACCwE,GAAe,kBAAC,EAAD,CAASzG,QAAQ,UAAUyG,GAC1CD,GAAiB,kBAAC,EAAD,MACjB5J,EACG,kBAACqC,EAAA,EAAD,CAAMC,SA7GZ,SAACC,GHwGc,IAACgI,EAAWH,EGvG7C7H,EAAEC,iBACFe,GHsGkCgH,EGtGCvB,EAAMC,OAAO3F,GHsGH8G,EGtGO,CAChD9C,SACAoC,WHoG6B,uCAAuB,WAAOnG,EAAUC,GAAjB,mBAAAC,EAAA,sEAExDF,EAAS,CACLjF,KjB9HiC,kCiB2HmB,EAMpBkF,IAAfxD,EANmC,EAMhDD,UAAaC,SACf0D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY5D,EAAS6D,SAVc,SAalDC,IAAM0G,KAAN,wBAA4BD,EAA5B,YAAiDH,EAAQ1G,GAbP,OAgBxDH,EAAS,CAACjF,KjB1I2B,kCiB0HmB,gDAqBxDiF,EAAS,CACLjF,KjB/IgC,+BiBgJhCE,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,QACzC,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UAxBU,yDAAvB,4DGML,kBAAC7B,EAAA,EAAKoI,MAAN,CAAYC,UAAU,UACtB,kBAACrI,EAAA,EAAKsI,MAAN,eACG,kBAACtI,EAAA,EAAKO,QAAN,CAAcwE,GAAG,SAASpE,MAAOsE,EAChCxE,SAAU,SAACP,GAAD,OAAMkH,EAAUlH,EAAEQ,OAAOC,SAChC,4BAAQA,MAAM,IAAd,cACA,4BAAQA,MAAM,KAAd,YACA,4BAAQA,MAAM,KAAd,YACA,4BAAQA,MAAM,KAAd,YACA,4BAAQA,MAAM,KAAd,iBACA,4BAAQA,MAAM,KAAd,mBAGP,kBAACX,EAAA,EAAKoI,MAAN,CAAYC,UAAU,WAClB,kBAACrI,EAAA,EAAKsI,MAAN,sBACA,kBAACtI,EAAA,EAAKO,QAAN,CAAcwE,GAAG,WAAWwD,IAAI,IAAI5H,MAAO0G,EAC3C5G,SAAU,SAACP,GAAD,OAAKoH,EAAWpH,EAAEQ,OAAOC,WAGvC,kBAACG,EAAA,EAAD,CAAQ7E,KAAK,SAAS8E,QAAQ,WAA9B,kBAEH,kBAAC,EAAD,CAASA,QAAQ,QAAjB,UACM,kBAAC,OAAD,CAAMuB,GAAG,UAAT,YADN,oBACyD,YC/K7EkG,GAAY,SAACvH,EAAIiG,GAAL,8CAAa,WAAOhG,EAAUC,GAAjB,iBAAAC,EAAA,sEACXK,IAAMC,IAAN,wBAA2BT,IADhB,gBAC1BU,EAD0B,EAC1BA,KAERT,EAAS,CACLjF,KnBTqB,gBmBUrBE,QAAS,CACLK,QAASmF,EAAK8C,IACdjE,KAAMmB,EAAKnB,KACXoE,MAAOjD,EAAKiD,MACZO,MAAOxD,EAAKwD,MACZyC,aAAcjG,EAAKiG,aACnBV,SAIRjI,aAAawJ,QAAQ,YAAatJ,KAAKuJ,UAAUvH,IAAWnE,KAAKC,YAf/B,2CAAb,yDC0FV0L,GAvFI,SAAC,GAAkC,IAAhChC,EAA+B,EAA/BA,MAAOiC,EAAwB,EAAxBA,SAAUhJ,EAAc,EAAdA,QAC7BsI,EAAYvB,EAAMC,OAAO3F,GACzBiG,EAAM0B,EAASC,OAASC,OAAOF,EAASC,OAAOE,MAAM,KAAK,IAAM,EAChE7H,EAAWa,cAGT9E,EADK+E,aAAY,SAAAlG,GAAK,OAAIA,EAAMkB,QAChCC,UAGRkJ,qBAAU,WACF+B,GACAhH,EAASsH,GAAUN,EAAWhB,MAEnC,CAAChG,EAAUgH,EAAWhB,IAGzB,IAAM8B,EAAwB,SAAC/H,GAC7BC,EDFwB,SAACD,GAAD,8CAAQ,WAAOC,EAAUC,GAAjB,SAAAC,EAAA,sDAClCF,EAAS,CACLjF,KnBxBwB,mBmByBxBE,QAAS8E,IAEbhC,aAAawJ,QAAQ,YAAatJ,KAAKuJ,UAAUvH,IAAWnE,KAAKC,YAL/B,2CAAR,wDCEfgM,CAAehI,KAS1B,OACI,kBAACoC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKwD,GAAI,GACL,6CACsB,IAArB7J,EAAU6K,OACP,kBAAC,EAAD,+BAC2B,kBAAC,OAAD,CAAMxF,GAAG,KAAT,YAEvB,kBAACqF,GAAA,EAAD,CAAW5G,QAAQ,SACd9D,EAAUM,KAAI,SAAAJ,GAAI,OACf,kBAACwK,GAAA,EAAU3E,KAAX,CAAgBwC,IAAKrI,EAAKX,SACtB,kBAAC6G,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKwD,GAAI,GACL,kBAACR,GAAA,EAAD,CAAO3B,IAAKxH,EAAKyH,MAAO2B,IAAKpJ,EAAKqD,KAAMgG,OAAK,EAAC0C,SAAO,KAEzD,kBAAC5F,EAAA,EAAD,CAAKwD,GAAI,GACL,kBAAC,OAAD,CAAMxE,GAAE,oBAAenF,EAAKX,UAAYW,EAAKqD,OAEjD,kBAAC8C,EAAA,EAAD,CAAKwD,GAAI,GACJ3J,EAAKgI,OAEV,kBAAC7B,EAAA,EAAD,CAAKwD,GAAI,GACL,kBAAC9G,EAAA,EAAKO,QAAN,CAAcwE,GAAG,SAASpE,MAAOxD,EAAK+J,IAAKzG,SAAU,SAACP,GAAD,OACjDgB,EAASsH,GAAUrL,EAAKX,QAASsM,OAAO5I,EAAEQ,OAAOC,WAChD,YAAI2E,MAAMnI,EAAKyK,cAAcrC,QAAQhI,KAAI,SAAAD,GAAC,OACvC,4BAAQkI,IAAKlI,EAAI,EAAGqD,MAAOrD,EAAI,GAA/B,IAAoCA,EAAI,QAIpD,kBAACgG,EAAA,EAAD,CAAKwD,GAAI,GACL,kBAAChG,EAAA,EAAD,CAAQ7E,KAAK,SAAS8E,QAAQ,QAAQkC,QAAS,kBAC3C+F,EAAsB7L,EAAKX,WAE3B,uBAAGqE,UAAU,0BASjD,kBAACyC,EAAA,EAAD,CAAKwD,GAAI,GACL,kBAACtC,EAAA,EAAD,KACI,kBAACmD,GAAA,EAAD,CAAW5G,QAAQ,SACf,kBAAC4G,GAAA,EAAU3E,KAAX,KACI,yCAAe/F,EAAUkM,QAAO,SAACC,EAAKjM,GAAN,OAAciM,EAAMjM,EAAK+J,MAAK,GAA9D,WADJ,IAEMjK,EAAUkM,QAAO,SAACC,EAAKjM,GAAN,OAAciM,EAAMjM,EAAK+J,IAAM/J,EAAKgI,QAAO,GAAGkE,QAAQ,IAE7E,kBAAC1B,GAAA,EAAU3E,KAAX,KACI,kBAAClC,EAAA,EAAD,CAAQ7E,KAAK,SAAS4E,UAAU,YAAYgH,SAA+B,IAArB5K,EAAU6K,OAAc7E,QAvD9E,WACpBrD,EAAQS,KAAK,8BAsDO,6BCpEbiJ,GAZO,SAAC,GAAkB,IAAhBrF,EAAe,EAAfA,SACrB,OACI,kBAAC5B,EAAA,EAAD,KACI,kBAACgB,EAAA,EAAD,CAAKxC,UAAU,6BACX,kBAACyC,EAAA,EAAD,CAAKiG,GAAI,GAAIzC,GAAI,GAChB7C,MCgEFuF,GA/DK,SAAC,GAA2B,IAAzBZ,EAAwB,EAAxBA,SAAUhJ,EAAc,EAAdA,QAAc,EAEjBC,mBAAS,IAFQ,mBAEpC4J,EAFoC,KAE7BC,EAF6B,OAGX7J,mBAAS,IAHE,mBAGpC8J,EAHoC,KAG1BC,EAH0B,KAMrC1I,EAAWa,cACXrE,EAAYsE,aAAY,SAAAlG,GAAK,OAAIA,EAAM4B,aACrCxB,EAA6BwB,EAA7BxB,QAASI,EAAoBoB,EAApBpB,MAAOqB,EAAaD,EAAbC,SAElBkM,EAAWjB,EAASC,OAASD,EAASC,OAAOE,MAAM,KAAK,GAAK,IAGnE5C,qBAAU,WACHxI,GACCiC,EAAQS,KAAKwJ,KAElB,CAACjK,EAASjC,EAAUkM,IASvB,OACA,kBAAC,GAAD,KACQ,uCACCvN,GAAS,kBAAC,EAAD,CAASyE,QAAQ,UAAUzE,GACpCJ,GAAW,kBAAC,EAAD,MACZ,kBAAC8D,EAAA,EAAD,CAAMC,SAZQ,SAACC,GACnBA,EAAEC,iBAEFe,EhBlBa,SAACuI,EAAOE,GAAR,8CAAqB,WAAOzI,GAAP,mBAAAE,EAAA,sEAElCF,EAAS,CACLjF,KJjBsB,uBIoBpBoF,EAAS,CACXC,QAAS,CACL,eAAgB,qBARU,SAWXG,IAAM0G,KAAK,mBAAoB,CAACsB,QAAOE,YAAWtI,GAXvC,gBAW1BM,EAX0B,EAW1BA,KAGRT,EAAS,CACLjF,KJ5BsB,qBI6BtBE,QAASwF,IAEb1C,aAAawJ,QAAQ,WAAYtJ,KAAKuJ,UAAU/G,IAlBd,kDAqBlCT,EAAS,CACLjF,KJlCqB,oBImCrBE,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,QACzC,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UAxBZ,0DAArB,sDgBkBJiI,CAAML,EAAOE,MAUd,kBAAC3J,EAAA,EAAKoI,MAAN,CAAYC,UAAU,SAClB,kBAACrI,EAAA,EAAKsI,MAAN,uBACA,kBAACtI,EAAA,EAAKO,QAAN,CAActE,KAAK,QAAQ2E,YAAY,sBACnCD,MAAO8I,EAAOhJ,SAAU,SAACP,GAAD,OAAOwJ,EAASxJ,EAAEQ,OAAOC,WAIzD,kBAACX,EAAA,EAAKoI,MAAN,CAAYC,UAAU,YAClB,kBAACrI,EAAA,EAAKsI,MAAN,kBACA,kBAACtI,EAAA,EAAKO,QAAN,CAActE,KAAK,WAAW2E,YAAY,sBACtCD,MAAOgJ,EAAUlJ,SAAU,SAACP,GAAD,OAAM0J,EAAY1J,EAAEQ,OAAOC,WAI9D,kBAACG,EAAA,EAAD,CAAQ7E,KAAK,SAAS8E,QAAQ,WAA9B,UAIJ,kBAACsC,EAAA,EAAD,CAAKxC,UAAU,QACX,kBAACyC,EAAA,EAAD,qBACkB,IACd,kBAAC,OAAD,CAAMhB,GAAIuH,EAAQ,6BAAyBA,GAAa,aAAxD,gBCgCLE,GArFQ,SAAC,GAA2B,IAAzBnB,EAAwB,EAAxBA,SAAUhJ,EAAc,EAAdA,QAAc,EAEtBC,mBAAS,IAFa,mBAEvCW,EAFuC,KAEjCwJ,EAFiC,OAGpBnK,mBAAS,IAHW,mBAGvC4J,EAHuC,KAGhCC,EAHgC,OAId7J,mBAAS,IAJK,mBAIvC8J,EAJuC,KAI7BC,EAJ6B,OAKA/J,mBAAS,IALT,mBAKvCoK,EALuC,KAKtBC,EALsB,OAMhBrK,mBAAS,MANO,mBAMvCgC,EANuC,KAM9BsI,EAN8B,KASxCjJ,EAAWa,cACXnE,EAAeoE,aAAY,SAAAlG,GAAK,OAAIA,EAAM8B,gBACxC1B,EAA6B0B,EAA7B1B,QAASI,EAAoBsB,EAApBtB,MAAOqB,EAAaC,EAAbD,SAElBkM,EAAWjB,EAASC,OAASD,EAASC,OAAOE,MAAM,KAAK,GAAK,IAGnE5C,qBAAU,WACFxI,GACAiC,EAAQS,KAAKwJ,KAElB,CAACjK,EAASjC,EAAUkM,IAavB,OACI,kBAAC,GAAD,KACI,uCACChI,GAAW,kBAAC,EAAD,CAASd,QAAQ,UAAUc,GACtCvF,GAAS,kBAAC,EAAD,CAASyE,QAAQ,UAAUzE,GACpCJ,GAAW,kBAAC,EAAD,MACZ,kBAAC8D,EAAA,EAAD,CAAMC,SAjBQ,SAACC,GACnBA,EAAEC,iBAEEwJ,IAAaM,EACbE,EAAW,yBAEXjJ,EjBmBY,SAACV,EAAMiJ,EAAOE,GAAd,8CAA2B,WAAOzI,GAAP,mBAAAE,EAAA,sEAE3CF,EAAS,CACLjF,KJtDyB,0BIyDvBoF,EAAS,CACXC,QAAS,CACL,eAAgB,qBARmB,SAWpBG,IAAM0G,KAAK,aAAc,CAAE3H,OAAMiJ,QAAOE,YAAYtI,GAXhC,gBAWnCM,EAXmC,EAWnCA,KAGRT,EAAS,CACLjF,KJjEyB,wBIkEzBE,QAASwF,IAIbT,EAAS,CACLjF,KJ7EsB,qBI8EtBE,QAASwF,IAEb1C,aAAawJ,QAAQ,WAAYtJ,KAAKuJ,UAAU/G,IAxBL,kDA2B3CT,EAAS,CACLjF,KJ7EwB,uBI8ExBE,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,QACzC,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UA9BH,0DAA3B,sDiBnBHuI,CAAS5J,EAAMiJ,EAAOE,MAY3B,kBAAC3J,EAAA,EAAKoI,MAAN,CAAYC,UAAU,QAClB,kBAACrI,EAAA,EAAKsI,MAAN,cACA,kBAACtI,EAAA,EAAKO,QAAN,CAActE,KAAK,OAAO2E,YAAY,iBAClCD,MAAOH,EAAMC,SAAU,SAACP,GAAD,OAAO8J,EAAQ9J,EAAEQ,OAAOC,WAIvD,kBAACX,EAAA,EAAKoI,MAAN,CAAYC,UAAU,SAClB,kBAACrI,EAAA,EAAKsI,MAAN,uBACA,kBAACtI,EAAA,EAAKO,QAAN,CAActE,KAAK,QAAQ2E,YAAY,sBACnCD,MAAO8I,EAAOhJ,SAAU,SAACP,GAAD,OAAOwJ,EAASxJ,EAAEQ,OAAOC,WAIzD,kBAACX,EAAA,EAAKoI,MAAN,CAAYC,UAAU,YAClB,kBAACrI,EAAA,EAAKsI,MAAN,kBACA,kBAACtI,EAAA,EAAKO,QAAN,CAActE,KAAK,WAAW2E,YAAY,iBACtCD,MAAOgJ,EAAUlJ,SAAU,SAACP,GAAD,OAAO0J,EAAY1J,EAAEQ,OAAOC,WAI/D,kBAACX,EAAA,EAAKoI,MAAN,CAAYC,UAAU,aAClB,kBAACrI,EAAA,EAAKsI,MAAN,0BACA,kBAACtI,EAAA,EAAKO,QAAN,CAActE,KAAK,WAAW2E,YAAY,yBACtCD,MAAOsJ,EAAiBxJ,SAAU,SAACP,GAAD,OAAOgK,EAAmBhK,EAAEQ,OAAOC,WAI7E,kBAACG,EAAA,EAAD,CAAQ7E,KAAK,SAAS8E,QAAQ,WAA9B,WAIJ,kBAACsC,EAAA,EAAD,CAAKxC,UAAU,QACX,kBAACyC,EAAA,EAAD,+BAC4B,IACxB,kBAAC,OAAD,CAAMhB,GAAIuH,EAAQ,0BAAsBA,GAAa,UAArD,a,UC8DLQ,GAzIO,SAAC,GAAiB,IAAfzK,EAAc,EAAdA,QAAc,EAEXC,mBAAS,IAFE,mBAE5BW,EAF4B,KAEtBwJ,EAFsB,OAGTnK,mBAAS,IAHA,mBAG5B4J,EAH4B,KAGrBC,EAHqB,OAIH7J,mBAAS,IAJN,mBAI5B8J,EAJ4B,KAIlBC,EAJkB,OAKW/J,mBAAS,IALpB,mBAK5BoK,EAL4B,KAKXC,EALW,OAMLrK,mBAAS,MANJ,mBAM5BgC,EAN4B,KAMnBsI,EANmB,KAS7BjJ,EAAWa,cACXlE,EAAcmE,aAAY,SAAAlG,GAAK,OAAIA,EAAM+B,eACvC3B,EAAyB2B,EAAzB3B,QAASI,EAAgBuB,EAAhBvB,MAAOwB,EAASD,EAATC,KAGlBS,EAAcyD,aAAY,SAAAlG,GAAK,OAAIA,EAAMyC,eAC9B+L,EAAoD/L,EAA7DrC,QAAiCqO,EAA4BhM,EAAnCjC,MAAsBkC,EAAaD,EAAbC,SAIhDb,EADUqE,aAAY,SAAAlG,GAAK,OAAIA,EAAM4B,aACrCC,SAGAhB,EADkBqF,aAAY,SAAAlG,GAAK,OAAIA,EAAMiC,qBAC7CpB,QAGRwJ,qBAAU,WACDxI,EAGIG,EAAK0C,MAKNwJ,EAAQlM,EAAK0C,MACbkJ,EAAS5L,EAAK2L,SALdvI,EAASF,EAAe,YACxBE,ECgEkB,uCAAM,WAAOA,EAAUC,GAAjB,uBAAAC,EAAA,sEAEhCF,EAAS,CACLjF,KrBtF8B,+BqBmFF,EAMIkF,IAAfxD,EANW,EAMxBD,UAAaC,SACf0D,EAAS,CACXC,QAAS,CACLC,cAAc,UAAD,OAAY5D,EAAS6D,SATV,SAYTC,IAAMC,IAAN,uBAAkCL,GAZzB,gBAYxBM,EAZwB,EAYxBA,KAGRT,EAAS,CACLjF,KrBlG8B,6BqBmG9BE,QAASwF,IAjBmB,kDAuBhCT,EAAS,CACLjF,KrBzG6B,4BqB0G7BE,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,QACzC,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UA1Bd,0DAAN,yDD/DlB2I,QAAQC,IAAIjM,IALhBoB,EAAQS,KAAK,YAWlB,CAACa,EAAUtB,EAASjC,EAAUG,EAAMU,IAavC,OAAO,kBAAC6E,EAAA,EAAD,KACH,kBAACC,EAAA,EAAD,CAAKwD,GAAI,GACL,4CACCjF,GAAW,kBAAC,EAAD,CAASd,QAAQ,UAAUc,GACtCvF,GAAS,kBAAC,EAAD,CAASyE,QAAQ,UAAUzE,GACpCK,GAAW,kBAAC,EAAD,CAASoE,QAAQ,WAAjB,yBACX7E,GAAW,kBAAC,EAAD,MACZ,kBAAC8D,EAAA,EAAD,CAAMC,SAlBQ,SAACC,GACnBA,EAAEC,iBAEEwJ,IAAaM,EACbE,EAAW,yBAEXjJ,ElBuEqB,SAACpD,GAAD,8CAAU,WAAOoD,EAAUC,GAAjB,uBAAAC,EAAA,sEAEnCF,EAAS,CACLjF,KJlG+B,gCI+FA,EAMCkF,IAAfxD,EANc,EAM3BD,UAAaC,SACf0D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY5D,EAAS6D,SAVP,SAaZC,IAAMiJ,IAAN,qBAAgC5M,EAAMuD,GAb1B,gBAa3BM,EAb2B,EAa3BA,KAGRT,EAAS,CACLjF,KJ/G+B,8BIgH/BE,QAASwF,IAlBsB,kDAwBnCT,EAAS,CACLjF,KJtH8B,8BIuH9BE,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,QACzC,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UA3BX,0DAAV,wDkBvEZ8I,CAAkB,CAAE1J,GAAInD,EAAK2G,IAAKjE,OAAMiJ,QAAOE,gBAapD,kBAAC3J,EAAA,EAAKoI,MAAN,CAAYC,UAAU,QAClB,kBAACrI,EAAA,EAAKsI,MAAN,cACA,kBAACtI,EAAA,EAAKO,QAAN,CAActE,KAAK,OAAO2E,YAAY,iBAClCD,MAAOH,EAAMC,SAAU,SAACP,GAAD,OAAO8J,EAAQ9J,EAAEQ,OAAOC,WAIvD,kBAACX,EAAA,EAAKoI,MAAN,CAAYC,UAAU,SAClB,kBAACrI,EAAA,EAAKsI,MAAN,uBACA,kBAACtI,EAAA,EAAKO,QAAN,CAActE,KAAK,QAAQ2E,YAAY,sBACnCD,MAAO8I,EAAOhJ,SAAU,SAACP,GAAD,OAAOwJ,EAASxJ,EAAEQ,OAAOC,WAIzD,kBAACX,EAAA,EAAKoI,MAAN,CAAYC,UAAU,YAClB,kBAACrI,EAAA,EAAKsI,MAAN,kBACA,kBAACtI,EAAA,EAAKO,QAAN,CAActE,KAAK,WAAW2E,YAAY,iBACtCD,MAAOgJ,EAAUlJ,SAAU,SAACP,GAAD,OAAO0J,EAAY1J,EAAEQ,OAAOC,WAI/D,kBAACX,EAAA,EAAKoI,MAAN,CAAYC,UAAU,aAClB,kBAACrI,EAAA,EAAKsI,MAAN,0BACA,kBAACtI,EAAA,EAAKO,QAAN,CAActE,KAAK,WAAW2E,YAAY,yBACtCD,MAAOsJ,EAAiBxJ,SAAU,SAACP,GAAD,OAAOgK,EAAmBhK,EAAEQ,OAAOC,WAI7E,kBAACG,EAAA,EAAD,CAAQ7E,KAAK,SAAS8E,QAAQ,WAA9B,YAKR,kBAACuC,EAAA,EAAD,CAAKwD,GAAI,GACL,yCACCwD,EAAkB,kBAAC,EAAD,MAAaC,EAAgB,kBAAC,EAAD,CAASxJ,QAAQ,UAAUwJ,GACvE,kBAACK,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,WAAS,EAACnK,UAAU,YAC9C,+BACI,4BACI,kCACA,oCACA,qCACA,oCACA,yCACA,+BAGR,+BACKrC,EAASjB,KAAI,SAAAY,GAAK,OACnB,wBAAIqH,IAAKrH,EAAMsG,KACP,4BAAKtG,EAAMsG,KACX,4BAAKtG,EAAM6J,UAAUC,UAAU,EAAG,KAClC,4BAAK9J,EAAM8M,YACX,4BAAK9M,EAAM+M,OAAS/M,EAAMgN,OAAOlD,UAAU,EAAG,IAC1C,uBAAGpH,UAAU,cAAc8C,MAAO,CAAEW,MAAO,UAE/C,4BAAKnG,EAAMiN,YAAcjN,EAAMkN,YAAYpD,UAAU,EAAG,IACpD,uBAAGpH,UAAU,cAAc8C,MAAO,CAAEW,MAAO,UAE/C,4BAAI,kBAAC,gBAAD,CAAehC,GAAE,kBAAanE,EAAMsG,MACpC,kBAAC3D,EAAA,EAAD,CAAQD,UAAU,SAASE,QAAQ,SAAnC,iBAIZ,6BAGA,kCEnFTuK,OAjDf,YAAwD,IAA/BC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,MAC1C,OACI,kBAAC9I,EAAA,EAAD,CAAK/B,UAAU,+BACX,kBAAC+B,EAAA,EAAII,KAAL,KACKuI,EACG,kBAAC,gBAAD,CAAejJ,GAAG,UACd,kBAACM,EAAA,EAAIC,KAAL,gBAGA,kBAACD,EAAA,EAAIC,KAAL,CAAUgF,UAAQ,GAAlB,aAIZ,kBAACjF,EAAA,EAAII,KAAL,KACKwI,EACG,kBAAC,gBAAD,CAAelJ,GAAG,aACd,kBAACM,EAAA,EAAIC,KAAL,kBAGA,kBAACD,EAAA,EAAIC,KAAL,CAAUgF,UAAQ,GAAlB,eAIZ,kBAACjF,EAAA,EAAII,KAAL,KACKyI,EACG,kBAAC,gBAAD,CAAenJ,GAAG,YACd,kBAACM,EAAA,EAAIC,KAAL,mBAGA,kBAACD,EAAA,EAAIC,KAAL,CAAUgF,UAAQ,GAAlB,cAIZ,kBAACjF,EAAA,EAAII,KAAL,KACK0I,EACG,kBAAC,gBAAD,CAAepJ,GAAG,eACd,kBAACM,EAAA,EAAIC,KAAL,uBAGA,kBAACD,EAAA,EAAIC,KAAL,CAAUgF,UAAQ,GAAlB,mBCyBT8D,OA7Df,YAAsC,IAAZ/L,EAAW,EAAXA,QAEhBsB,EAAWa,cAET7E,EADK8E,aAAY,SAAAlG,GAAK,OAAIA,EAAMkB,QAChCE,gBAJyB,EAMH2C,mBAAS3C,EAAgB0O,SANtB,mBAM1BA,EAN0B,KAMjBC,EANiB,OAOThM,mBAAS3C,EAAgB4O,MAPhB,mBAO1BA,EAP0B,KAOpBC,EAPoB,OAQGlM,mBAAS3C,EAAgB8O,YAR5B,mBAQ1BA,EAR0B,KAQdC,EARc,OASHpM,mBAAS3C,EAAgBgP,SATtB,mBAS1BA,EAT0B,KASjBC,EATiB,KAiBjC,OACI,kBAAC,GAAD,KACI,kBAAC,GAAD,CAAeZ,OAAK,EAACC,OAAK,IAC1B,yCACA,kBAACxL,EAAA,EAAD,CAAMC,SAVQ,SAACC,GRcQ,IAACyB,EQb5BzB,EAAEC,iBACFe,GRY4BS,EQZC,CAAEiK,UAASE,OAAME,aAAYE,WRY/B,uCAAU,WAAOhL,GAAP,SAAAE,EAAA,sDACzCF,EAAS,CACLjF,KnBhCkC,6BmBiClCE,QAASwF,IAEb1C,aAAawJ,QAAQ,kBAAmBtJ,KAAKuJ,UAAU/G,IALd,2CAAV,wDQX3B/B,EAAQS,KAAK,cAQL,kBAACL,EAAA,EAAKoI,MAAN,CAAYC,UAAU,WAClB,kBAACrI,EAAA,EAAKsI,MAAN,iBACA,kBAACtI,EAAA,EAAKO,QAAN,CAActE,KAAK,OAAO2E,YAAY,gBAClCD,MAAOiL,EAASnL,SAAU,SAACP,GAAD,OAAO2L,EAAW3L,EAAEQ,OAAOC,WAI7D,kBAACX,EAAA,EAAKoI,MAAN,CAAYC,UAAU,QAClB,kBAACrI,EAAA,EAAKsI,MAAN,cACA,kBAACtI,EAAA,EAAKO,QAAN,CAActE,KAAK,OAAO2E,YAAY,aAClCD,MAAOmL,EAAMrL,SAAU,SAACP,GAAD,OAAO6L,EAAQ7L,EAAEQ,OAAOC,WAIvD,kBAACX,EAAA,EAAKoI,MAAN,CAAYC,UAAU,cAClB,kBAACrI,EAAA,EAAKsI,MAAN,oBACA,kBAACtI,EAAA,EAAKO,QAAN,CAActE,KAAK,OAAO2E,YAAY,mBAClCD,MAAOqL,EAAYvL,SAAU,SAACP,GAAD,OAAO+L,EAAc/L,EAAEQ,OAAOC,WAInE,kBAACX,EAAA,EAAKoI,MAAN,CAAYC,UAAU,WAClB,kBAACrI,EAAA,EAAKsI,MAAN,iBACA,kBAACtI,EAAA,EAAKO,QAAN,CAActE,KAAK,OAAO2E,YAAY,gBAClCD,MAAOuL,EAASzL,SAAU,SAACP,GAAD,OAAOiM,EAAWjM,EAAEQ,OAAOC,WAI7D,kBAACG,EAAA,EAAD,CAAQ7E,KAAK,SAAS8E,QAAQ,WAA9B,eCNDqL,OA5Cf,YAA2C,IAAZxM,EAAW,EAAXA,QAErBsB,EAAWa,cACJC,aAAY,SAAAlG,GAAK,OAAIA,EAAMkB,QAChCE,iBAGJ0C,EAAQS,KAAK,aAPqB,MAUIR,mBAAS,UAVb,mBAU/BpC,EAV+B,KAUhB4O,EAVgB,KAkBtC,OACI,kBAAC,GAAD,KACI,kBAAC,GAAD,CAAed,OAAK,EAACC,OAAK,EAACC,OAAK,IAChC,8CACA,kBAACzL,EAAA,EAAD,CAAMC,SAVQ,SAACC,GTsBM,IAACyB,ESrB1BzB,EAAEC,iBACFe,GToB0BS,ESpBClE,EToBF,uCAAU,WAAOyD,GAAP,SAAAE,EAAA,sDACvCF,EAAS,CACLjF,KnBxCgC,2BmByChCE,QAASwF,IAEb1C,aAAawJ,QAAQ,gBAAiBtJ,KAAKuJ,UAAU/G,IALd,2CAAV,wDSnBzB/B,EAAQS,KAAK,iBAQL,kBAACL,EAAA,EAAKoI,MAAN,CAAYC,UAAU,WAClB,kBAACrI,EAAA,EAAKsI,MAAN,CAAYvD,GAAG,UAAf,kBACJ,kBAACzB,EAAA,EAAD,KACI,kBAACtD,EAAA,EAAKsM,MAAN,CAAYrQ,KAAK,QAAQsQ,MAAM,wBAAwBtL,GAAG,SACtDT,KAAK,gBAAgBG,MAAM,SAAS6L,SAAO,EAC3C/L,SAAU,SAACP,GAAD,OAAOmM,EAAiBnM,EAAEQ,OAAOC,YAKnD,kBAACG,EAAA,EAAD,CAAQ7E,KAAK,SAAS8E,QAAQ,WAA9B,eC2GD0L,OA3If,YAAwC,IAAZ7M,EAAW,EAAXA,QAClBsB,EAAWa,cACX/E,EAAOgF,aAAY,SAAAlG,GAAK,OAAIA,EAAMkB,QAGlC0P,EAAa,SAACC,GAChB,OAAQC,KAAKC,MAAY,IAANF,GAAa,KAAKtD,QAAQ,IAGjDrM,EAAK8P,UAAYJ,EAAW1P,EAAKC,UAAUkM,QAAO,SAACC,EAAKjM,GAAN,OAAeiM,EAAMjM,EAAKgI,MAAQhI,EAAK+J,MAAK,IAE9FlK,EAAK+P,cAAgBL,EAAW1P,EAAK8P,UAAY,IAAM,IAAM,GAC7D9P,EAAKgQ,SAAWN,EAAW5D,QAAQ,IAAO9L,EAAK8P,WAAWzD,QAAQ,KAIlErM,EAAKiO,YAAcnC,OAAO9L,EAAK8P,WAAahE,OAAO9L,EAAK+P,eAAiBjE,OAAO9L,EAAKgQ,WAAW3D,QAAQ,GAExG,IAAMnL,EAAc8D,aAAY,SAAAlG,GAAK,OAAIA,EAAMoC,eACvCC,EAA0BD,EAA1BC,MAAOxB,EAAmBuB,EAAnBvB,QAASL,EAAU4B,EAAV5B,MAoBxB,OAlBA6J,qBAAU,WACFxJ,GACAiD,EAAQS,KAAR,kBAAwBlC,EAAMsG,QAGnC,CAAC7E,EAASjD,IAcT,oCACI,kBAAC,GAAD,CAAe4O,OAAK,EAACC,OAAK,EAACC,OAAK,EAACC,OAAK,IACtC,kBAACrI,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKwD,GAAI,GACL,kBAACa,GAAA,EAAD,CAAW5G,QAAQ,SACf,kBAAC4G,GAAA,EAAU3E,KAAX,KACI,wCACA,2BACI,4CACEhG,EAAKE,gBAAgB0O,QAF3B,KAEsC5O,EAAKE,gBAAgB4O,KACtD9O,EAAKE,gBAAgB8O,WAH1B,IAGuChP,EAAKE,gBAAgBgP,UAIhE,kBAACvE,GAAA,EAAU3E,KAAX,KACI,8CACA,2BACI,4CACChG,EAAKS,gBAId,kBAACkK,GAAA,EAAU3E,KAAX,KACI,2CAC2B,IAA1BhG,EAAKC,UAAU6K,OAAe,kBAAC,EAAD,CAAS/G,QAAQ,UAAjB,uBAE3B,kBAAC4G,GAAA,EAAD,CAAW5G,QAAQ,SACV/D,EAAKC,UAAUM,KAAI,SAACJ,EAAM8P,GAAP,OACpB,kBAACtF,GAAA,EAAU3E,KAAX,KACI,kBAACK,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKwD,GAAI,GACP,kBAACR,GAAA,EAAD,CAAO3B,IAAKxH,EAAKyH,MAAO2B,IAAKpJ,EAAK+P,IAAK1G,OAAK,EAAC0C,SAAO,KAEtD,kBAAC5F,EAAA,EAAD,KACI,kBAAC,OAAD,CAAMhB,GAAE,mBAAcnF,EAAKX,UACtBW,EAAKqD,OAGb,kBAAC8C,EAAA,EAAD,CAAKwD,GAAI,GACP3J,EAAK+J,IADP,OACgB/J,EAAKgI,MADrB,QACiChI,EAAK+J,IAAM/J,EAAKgI,gBAWlF,kBAAC7B,EAAA,EAAD,CAAKwD,GAAI,GACL,kBAACa,GAAA,EAAD,CAAW5G,QAAQ,SACf,kBAAC4G,GAAA,EAAU3E,KAAX,KACI,8CAGJ,kBAAC2E,GAAA,EAAU3E,KAAX,KACI,kBAACK,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,cACA,kBAACA,EAAA,EAAD,SAAOtG,EAAK8P,aAGpB,kBAACnF,GAAA,EAAU3E,KAAX,KACI,kBAACK,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,iBACA,kBAACA,EAAA,EAAD,SAAOtG,EAAK+P,iBAIpB,kBAACpF,GAAA,EAAU3E,KAAX,KACI,kBAACK,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,YACA,kBAACA,EAAA,EAAD,SAAOtG,EAAKgQ,YAIpB,kBAACrF,GAAA,EAAU3E,KAAX,KACI,kBAACK,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,cACA,kBAACA,EAAA,EAAD,SAAOtG,EAAKiO,cAIpB,kBAACtD,GAAA,EAAU3E,KAAX,KACK1G,GAAS,kBAAC,EAAD,CAASyE,QAAQ,UAAUzE,IAGzC,kBAACqL,GAAA,EAAU3E,KAAX,KACI,kBAAClC,EAAA,EAAD,CAAQ7E,KAAK,SAAS4E,UAAU,YAAYgH,SAA6B,IAAnB7K,EAAKC,UAAiBgG,QApG1E,WACtB/B,EJ9B0B,SAAC/C,GAAD,8CAAW,WAAO+C,EAAUC,GAAjB,uBAAAC,EAAA,sEAErCF,EAAS,CACLjF,KrBVwB,yBqBOS,EAMDkF,IAAfxD,EANgB,EAM7BD,UAAaC,SACf0D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY5D,EAAS6D,SAVL,SAadC,IAAM0G,KAAN,cAA0BhK,EAAOkD,GAbnB,gBAa7BM,EAb6B,EAa7BA,KAGRT,EAAS,CACLjF,KrBvBwB,uBqBwBxBE,QAASwF,IAlBwB,kDAwBrCT,EAAS,CACLjF,KrB9BuB,sBqB+BvBE,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,QACzC,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UA3BT,0DAAX,wDI8BjBsL,CAAmB,CACxB9O,WAAYrB,EAAKC,UACjBC,gBAAiBF,EAAKE,gBACtBO,cAAeT,EAAKS,cACpBqP,UAAW9P,EAAK8P,UAChBC,cAAe/P,EAAK+P,cACpBC,SAAUhQ,EAAKgQ,SACf/B,WAAYjO,EAAKiO,gBA4FD,qB,SCiEbmC,OA9Lf,YAA0C,IAyBdT,EAzBLhG,EAAkB,EAAlBA,MAAO/G,EAAW,EAAXA,QAEpByN,EAAU1G,EAAMC,OAAO3F,GACvBC,EAAWa,cAHoB,EAKLlC,oBAAS,GALJ,mBAK9ByN,EAL8B,KAKpBC,EALoB,KAQ/BnP,EAAe4D,aAAY,SAAAlG,GAAK,OAAIA,EAAMsC,gBACxCD,EAA0BC,EAA1BD,MAAOjC,EAAmBkC,EAAnBlC,QAASI,EAAU8B,EAAV9B,MAGhBqB,EADUqE,aAAY,SAAAlG,GAAK,OAAIA,EAAM4B,aACrCC,SAGDW,EAAW0D,aAAY,SAAAlG,GAAK,OAAIA,EAAMwC,YAC3BkP,EAAoClP,EAA7CpC,QAA8BuR,EAAenP,EAAxB3B,QAExBgC,EAAYqD,aAAY,SAAAlG,GAAK,OAAIA,EAAM6C,aAC5B+O,EAAsC/O,EAA/CzC,QAA+ByR,EAAgBhP,EAAzBhC,QAG9B,IAAKT,EAAS,CAOViC,EAAM2O,WAJcH,EAISxO,EAAME,WAAW8K,QAAO,SAACC,EAAKjM,GAAN,OAAeiM,EAAMjM,EAAKgI,MAAQhI,EAAK+J,MAAK,IAHrF0F,KAAKC,MAAY,IAANF,GAAa,KAAKtD,QAAQ,IA8CrD,OAvCAlD,qBAAU,WAEDxI,GACDiC,EAAQS,KAAK,UAGjB,ILXwBY,EKWlB2M,EAAe,uCAAG,gCAAAxM,EAAA,sEACaK,IAAMC,IAAI,sBADvB,gBACNmM,EADM,EACZlM,MACFmM,EAASC,SAASC,cAAc,WAC/B/R,KAAO,kBACd6R,EAAOnJ,IAAP,kDAA2DkJ,GAC3DC,EAAOG,OAAQ,EACfH,EAAOI,OAAS,WACZX,GAAY,IAEhBQ,SAASI,KAAKC,YAAYN,GATN,4CAAH,sDAahB3P,GAASsP,GAAcE,GACxBzM,EAAS,CAAEjF,K1B5CQ,oB0B6CnBiF,EAAS,CAAEjF,K1BlDS,sB0BmDpBiF,GL3BoBD,EK2BKoM,EL3BN,uCAAQ,WAAOnM,EAAUC,GAAjB,uBAAAC,EAAA,sEAE/BF,EAAS,CACLjF,KrBlCyB,0BqB+BE,EAMKkF,IAAfxD,EANU,EAMvBD,UAAaC,SACf0D,EAAS,CACXC,QAAS,CACLC,cAAc,UAAD,OAAY5D,EAAS6D,SATX,SAYRC,IAAMC,IAAN,sBAAyBT,GAAMI,GAZvB,gBAYvBM,EAZuB,EAYvBA,KAGRT,EAAS,CACLjF,KrB9CyB,wBqB+CzBE,QAASwF,IAjBkB,kDAuB/BT,EAAS,CACLjF,KrBrDwB,uBqBsDxBE,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,QACzC,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UA1Bf,0DAAR,2DK4BXwM,OAAOC,OAGff,GAAY,GAFZK,MAIL,CAACP,EAASnM,EAAU/C,EAAOsP,EAAYE,EAAa/N,EAASjC,IAWzDzB,EAAU,kBAAC,EAAD,MAAaI,EAAQ,kBAAC,EAAD,CAASyE,QAAQ,UAAUzE,GAC7D,oCACI,qCAAW6B,EAAMsG,KACb,kBAACpB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKwD,GAAI,GACL,kBAACa,GAAA,EAAD,CAAW5G,QAAQ,SACf,kBAAC4G,GAAA,EAAU3E,KAAX,KACI,wCACA,2BAAG,yCAAH,IAA2B7E,EAAML,KAAK0C,MACtC,2BACI,0CADJ,IAC6B,IACzB,uBAAG+N,KAAI,iBAAYpQ,EAAML,KAAK2L,QAAUtL,EAAML,KAAK2L,QAEvD,2BACI,4CACCtL,EAAMjB,gBAAgB0O,QAF3B,KAEsCzN,EAAMjB,gBAAgB4O,KACvD3N,EAAMjB,gBAAgB8O,WAH3B,IAGwC7N,EAAMjB,gBAAgBgP,SAEjE/N,EAAMiN,YAAc,kBAAC,EAAD,CAASrK,QAAQ,WAAjB,iBAA0C5C,EAAMkN,aACjE,kBAAC,EAAD,CAAStK,QAAQ,UAAjB,kBAIJ,kBAAC4G,GAAA,EAAU3E,KAAX,KACI,8CACA,2BACI,4CACC7E,EAAMV,eAEdU,EAAM+M,OAAS,kBAAC,EAAD,CAASnK,QAAQ,WAAjB,YAAqC5C,EAAMgN,QACvD,kBAAC,EAAD,CAASpK,QAAQ,UAAjB,aAIJ,kBAAC4G,GAAA,EAAU3E,KAAX,KACI,2CAC6B,IAA5B7E,EAAME,WAAWyJ,OAAe,kBAAC,EAAD,CAAS/G,QAAQ,UAAjB,mBAEzB,kBAAC4G,GAAA,EAAD,CAAW5G,QAAQ,SACd5C,EAAME,WAAWd,KAAI,SAACJ,GAAD,OAClB,kBAACwK,GAAA,EAAU3E,KAAX,CAAgBwC,IAAKrI,EAAKsH,KACtB,kBAACpB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKwD,GAAI,GACL,kBAACR,GAAA,EAAD,CAAO3B,IAAKxH,EAAKyH,MAAO2B,IAAKpJ,EAAK+P,IAAK1G,OAAK,EAAC0C,SAAO,KAExD,kBAAC5F,EAAA,EAAD,KACI,kBAAC,OAAD,CAAMhB,GAAE,mBAAcnF,EAAKX,UACtBW,EAAKqD,OAGd,kBAAC8C,EAAA,EAAD,CAAKwD,GAAI,GACJ3J,EAAK+J,IADV,OACmB/J,EAAKgI,MADxB,QACoChI,EAAK+J,IAAM/J,EAAKgI,gBAWxF,kBAAC7B,EAAA,EAAD,CAAKwD,GAAI,GACL,kBAACa,GAAA,EAAD,CAAW5G,QAAQ,SACf,kBAAC4G,GAAA,EAAU3E,KAAX,KACI,8CAGJ,kBAAC2E,GAAA,EAAU3E,KAAX,KACI,kBAACK,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,cACA,kBAACA,EAAA,EAAD,SAAOnF,EAAM2O,aAGrB,kBAACnF,GAAA,EAAU3E,KAAX,KACI,kBAACK,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,iBACA,kBAACA,EAAA,EAAD,SAAOnF,EAAM4O,iBAIrB,kBAACpF,GAAA,EAAU3E,KAAX,KACI,kBAACK,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,YACA,kBAACA,EAAA,EAAD,SAAOnF,EAAM6O,YAIrB,kBAACrF,GAAA,EAAU3E,KAAX,KACI,kBAACK,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,cACA,kBAACA,EAAA,EAAD,SAAOnF,EAAM8M,eAGvB9M,EAAM+M,QACJ,kBAACvD,GAAA,EAAU3E,KAAX,KACKwK,GAAc,kBAAC,EAAD,MACbF,EACE,kBAAC,gBAAD,CAAckB,OAAQrQ,EAAM8M,WAAYwD,UA3G1C,SAACC,GAC3BlE,QAAQC,IAAIiE,GACZxN,ELLuB,SAACmM,EAASqB,GAAV,8CAA4B,WAAOxN,EAAUC,GAAjB,uBAAAC,EAAA,sEAEnDF,EAAS,CACLjF,KrBzDqB,sBqBsD0B,EAMfkF,IAAfxD,EAN8B,EAM3CD,UAAaC,SACf0D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY5D,EAAS6D,SAVS,SAa5BC,IAAMiJ,IAAN,sBAAyB2C,EAAzB,QAAwCqB,EAAerN,GAb3B,gBAa3CM,EAb2C,EAa3CA,KAGRT,EAAS,CACLjF,KrBtEqB,oBqBuErBE,QAASwF,IAlBsC,kDAwBnDT,EAAS,CACLjF,KrB7EoB,mBqB8EpBE,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,QACzC,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UA3BK,0DAA5B,wDKKd8M,CAAgBtB,EAASqB,OAwGG,kBAAC,EAAD,OAMpBhB,GAAe,kBAAC,EAAD,MACf/P,GAAYA,EAASwF,SAAWhF,EAAM+M,SAAW/M,EAAMiN,aACpD,kBAACzD,GAAA,EAAU3E,KAAX,KACI,kBAAClC,EAAA,EAAD,CAAQ7E,KAAK,SAAS4E,UAAU,gBAC5BoC,QA/GT,WACnB/B,EL0FwB,SAAC/C,GAAD,8CAAW,WAAO+C,EAAUC,GAAjB,uBAAAC,EAAA,sEAEnCF,EAAS,CACLjF,KrBjKsB,uBqB8JS,EAMCkF,IAAfxD,EANc,EAM3BD,UAAaC,SACf0D,EAAS,CACXC,QAAS,CACLC,cAAc,UAAD,OAAY5D,EAAS6D,SATP,SAYZC,IAAMiJ,IAAN,sBAAyBvM,EAAMsG,IAA/B,YAA8C,GAAIpD,GAZtC,gBAY3BM,EAZ2B,EAY3BA,KAGRT,EAAS,CACLjF,KrB7KsB,qBqB8KtBE,QAASwF,IAjBsB,kDAuBnCT,EAAS,CACLjF,KrBpLqB,oBqBqLrBE,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,QACzC,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UA1BX,0DAAX,wDK1Ff+M,CAAiBzQ,MA6GF,2BC5GjB0Q,GAtEQ,SAAC,GAA0B,EAAxBjG,SAAyB,IAAfhJ,EAAc,EAAdA,QAC3BsB,EAAWa,cAEVnD,EAAWoD,aAAY,SAAAlG,GAAK,OAAIA,EAAM8C,YACpC1C,EAA0B0C,EAA1B1C,QAASI,EAAiBsC,EAAjBtC,MAAOuC,EAAUD,EAAVC,MAGhBlB,EADUqE,aAAY,SAAAlG,GAAK,OAAIA,EAAM4B,aACrCC,SAGSmR,EADE9M,aAAY,SAAAlG,GAAK,OAAIA,EAAMkC,cACtCrB,QAGRwJ,qBAAU,WACHxI,GAAYA,EAASwF,QACpBjC,EzBsIkB,uCAAM,WAAOA,EAAUC,GAAjB,uBAAAC,EAAA,sEAE5BF,EAAS,CACLjF,KJhJqB,sBI6IG,EAMQkF,IAAfxD,EANO,EAMpBD,UAAaC,SACf0D,EAAS,CACXC,QAAS,CACLC,cAAc,UAAD,OAAY5D,EAAS6D,SATd,SAYLC,IAAMC,IAAN,aAAwBL,GAZnB,gBAYpBM,EAZoB,EAYpBA,KAGRT,EAAS,CACLjF,KJ5JqB,oBI6JrBE,QAASwF,IAjBe,kDAuB5BT,EAAS,CACLjF,KJnKoB,mBIoKpBE,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,QACzC,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UA1BlB,0DAAN,yDyBpIlBjC,EAAQS,KAAK,YAElB,CAACa,EAAUtB,EAASjC,EAAUmR,IAEjC,IAAMC,EAAgB,SAAC9N,GACfoN,OAAOW,QAAQ,+BACf9N,EzB+JoB,SAACD,GAAD,8CAAQ,WAAOC,EAAUC,GAAjB,mBAAAC,EAAA,sEAEhCF,EAAS,CACLjF,KJ5KuB,wBIyKK,EAMIkF,IAAfxD,EANW,EAMxBD,UAAaC,SACf0D,EAAS,CACXC,QAAS,CACLC,cAAc,UAAD,OAAY5D,EAAS6D,SATV,SAY1BC,IAAMwN,OAAN,qBAA2BhO,GAAMI,GAZP,OAehCH,EAAS,CAAEjF,KJvLgB,wBIwKK,gDAmBhCiF,EAAS,CACLjF,KJ3LsB,uBI4LtBE,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,QACzC,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UAtBd,yDAAR,wDyB/JXqN,CAAiBjO,KAIlC,OAAO,oCACC,qCACC/E,EAAU,kBAAC,EAAD,MAAaI,EAAQ,kBAAC,EAAD,CAASyE,QAAQ,UAAUzE,GACvD,kBAACsO,GAAA,EAAD,CAAOC,SAAO,EAACE,OAAK,EAACoE,YAAU,EAACrE,UAAQ,EAACjK,UAAU,YAC/C,+BACI,4BACI,kCACA,oCACA,qCACA,qCACA,uCACA,+BAGJ,+BACKhC,EAAMtB,KAAI,SAAAO,GAAI,OACX,wBAAI0H,IAAK1H,EAAK2G,KACV,4BAAK3G,EAAK2G,KACV,4BAAK3G,EAAK0C,MACV,4BAAI,uBAAG+N,KAAI,iBAAYzQ,EAAK2L,QAAU3L,EAAK2L,QAC3C,4BAAK3L,EAAKqF,QAAW,uBAAGtC,UAAU,eAAe8C,MAAO,CAAEW,MAAO,WAC1D,uBAAGzD,UAAU,eAAe8C,MAAO,CAAEW,MAAO,UAGnD,4BAAI,kBAAC,gBAAD,CAAehC,GAAE,sBAAiBxE,EAAK2G,IAAtB,UACjB,kBAAC3D,EAAA,EAAD,CAAQC,QAAQ,QAAQF,UAAU,UAAS,uBAAGA,UAAU,kBAGxD,kBAACC,EAAA,EAAD,CAAQC,QAAQ,SAASF,UAAU,SAASoC,QAAS,kBAAM8L,EAAcjR,EAAK2G,OAC1E,uBAAG5D,UAAU,2BCyC1CuO,GAhGQ,SAAC,GAAwB,IAAtBzI,EAAqB,EAArBA,MAAO/G,EAAc,EAAdA,QACvByP,EAAS1I,EAAMC,OAAO3F,GADe,EAEnBpB,mBAAS,IAFU,mBAEpCW,EAFoC,KAE9BwJ,EAF8B,OAGjBnK,mBAAS,IAHQ,mBAGpC4J,EAHoC,KAG7BC,EAH6B,OAIb7J,oBAAS,GAJI,mBAIpCsD,EAJoC,KAI3BmM,EAJ2B,KAQrCpO,EAAWa,cACXlE,EAAcmE,aAAY,SAAAlG,GAAK,OAAIA,EAAM+B,eACvC3B,EAAyB2B,EAAzB3B,QAASI,EAAgBuB,EAAhBvB,MAAOwB,EAASD,EAATC,KAGlBG,EAAa+D,aAAY,SAAAlG,GAAK,OAAIA,EAAMmC,cAC7BsR,EAA8DtR,EAAvE/B,QAA+BsT,EAAwCvR,EAA/C3B,MAA6BmT,EAAkBxR,EAA3BtB,QAMpDwJ,qBAAU,WAEFsJ,GACAvO,EAAS,CAAEjF,K9BMU,sB8BLrB2D,EAAQS,KAAK,oBAERvC,EAAK0C,MAAQ1C,EAAK2G,MAAQ4K,GAI3BrF,EAAQlM,EAAK0C,MACbkJ,EAAS5L,EAAK2L,OACd6F,EAAWxR,EAAKqF,WALhBjC,EAASF,EAAeqO,IACxB7E,QAAQC,IAAI3M,MAQrB,CAACoD,EAAUmO,EAAQvR,EAAM2R,EAAe7P,IAU3C,OACI,oCACA,kBAAC,OAAD,CAAM0C,GAAI,kBAAmBzB,UAAU,sBAAvC,WAGK0O,GAAiB,kBAAC,EAAD,MACjBC,GAAe,kBAAC,EAAD,CAASzO,QAAQ,UAAUyO,GAC3C,kBAAC,GAAD,KACI,yCACCtT,EAAU,kBAAC,EAAD,MAAaI,EAAQ,kBAAC,EAAD,CAASyE,QAAQ,UAAUzE,GACvD,kBAAC0D,EAAA,EAAD,CAAMC,SAlBA,SAACC,GACnBA,EAAEC,iBAEFe,E1ByKwB,SAACpD,GAAD,8CAAU,WAAOoD,EAAUC,GAAjB,uBAAAC,EAAA,sEAElCF,EAAS,CACLjF,KJ3LuB,wBIwLO,EAMEkF,IAAfxD,EANa,EAM1BD,UAAaC,SACf0D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY5D,EAAS6D,SAVR,SAaXC,IAAMiJ,IAAN,qBAAwB5M,EAAK2G,KAAO3G,EAAMuD,GAb/B,gBAa1BM,EAb0B,EAa1BA,KAGRT,EAAS,CAAEjF,KJvMgB,wBIwM3BiF,EAAS,CACLjF,KJlOwB,uBImOxBE,QAASwF,IAnBqB,kDAwBlCT,EAAS,CACLjF,KJ/MsB,sBIgNtBE,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,QACzC,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UA3BZ,0DAAV,wD0BzKf6N,CAAiB,CAAEjL,IAAK4K,EAAQ7O,OAAMiJ,QAAOtG,eAgBtC,kBAACnD,EAAA,EAAKoI,MAAN,CAAYC,UAAU,QAClB,kBAACrI,EAAA,EAAKsI,MAAN,cACA,kBAACtI,EAAA,EAAKO,QAAN,CAActE,KAAK,OAAO2E,YAAY,iBAClCD,MAAOH,EAAMC,SAAU,SAACP,GAAD,OAAO8J,EAAQ9J,EAAEQ,OAAOC,WAIvD,kBAACX,EAAA,EAAKoI,MAAN,CAAYC,UAAU,SAClB,kBAACrI,EAAA,EAAKsI,MAAN,uBACA,kBAACtI,EAAA,EAAKO,QAAN,CAActE,KAAK,QAAQ2E,YAAY,sBACnCD,MAAO8I,EAAOhJ,SAAU,SAACP,GAAD,OAAOwJ,EAASxJ,EAAEQ,OAAOC,WAIzD,kBAACX,EAAA,EAAKoI,MAAN,CAAYC,UAAU,WAElB,kBAACrI,EAAA,EAAKsM,MAAN,CAAYrQ,KAAK,WACbsQ,MAAM,UACNC,QAASrJ,EACT1C,SAAU,SAACP,GAAD,OAAOoP,EAAWpP,EAAEQ,OAAO8L,aAM7C,kBAAC1L,EAAA,EAAD,CAAQ7E,KAAK,SAAS8E,QAAQ,WAA9B,cC2BT4O,GA5GW,SAAC,GAAwB,IAAtB/P,EAAqB,EAArBA,QACnBoG,EADwC,EAAZW,MACTC,OAAOZ,YAAc,EACxC9E,EAAWa,cAEXlG,EAAcmG,aAAY,SAAAlG,GAAK,OAAIA,EAAMD,eACvCK,EAA0CL,EAA1CK,QAASI,EAAiCT,EAAjCS,MAAOP,EAA0BF,EAA1BE,SAAUK,EAAgBP,EAAhBO,MAAOC,EAASR,EAATQ,KAGnCO,EAAgBoF,aAAY,SAAAlG,GAAK,OAAIA,EAAMc,iBAChCgT,EAAyFhT,EAAlGV,QAAkC2T,EAAgEjT,EAAzED,QAAgCmT,EAAyClT,EAAhDN,MAA8ByT,EAAkBnT,EAA3BJ,QAEzEE,EAAgBsF,aAAY,SAAAlG,GAAK,OAAIA,EAAMY,iBAChCsT,EAA8DtT,EAAvER,QAA+B+T,EAAwCvT,EAA/CJ,MAA6BwS,EAAkBpS,EAA3BC,QAG5CgB,EADUqE,aAAY,SAAAlG,GAAK,OAAIA,EAAM4B,aACrCC,SAEJuS,EAAQ,EAGZ/J,qBAAU,WAENjF,EAAS,CAAEjF,KnCdiB,yBmCgBvB0B,EAASwF,SACVvD,EAAQS,KAAK,UAIbwP,EACAjQ,EAAQS,KAAR,yBAA+B0P,EAActL,MAE7CvD,EAAS6E,GAAa,GAAIC,MAE/B,CAAC9E,EAAUtB,EAASjC,EAAUmR,EAAee,EAAgBE,EAAe/J,IAE/E,IAAM+I,EAAgB,SAAC9N,GACfoN,OAAOW,QAAQ,+BAEf9N,ElBIiB,SAACD,GAAD,8CAAQ,WAAOC,EAAUC,GAAjB,mBAAAC,EAAA,sEAE7BF,EAAS,CACLjF,KjB9C0B,2BiB2CD,EAMOkF,IAAfxD,EANQ,EAMrBD,UAAaC,SACf0D,EAAS,CACXC,QAAS,CACLC,cAAc,UAAD,OAAY5D,EAAS6D,SATb,SAYtBC,IAAMwN,OAAN,wBAA8BhO,GAAMI,GAZd,OAe7BH,EAAS,CACLjF,KjB1D0B,2BiB0CD,gDAsB7BiF,EAAS,CACLjF,KjBhEyB,wBiBiEzBE,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,QACzC,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UAzBjB,yDAAR,wDkBJRsO,CAAclP,KAO/B,OAAO,oCAEH,kBAACoC,EAAA,EAAD,CAAKxC,UAAU,qBACX,kBAACyC,EAAA,EAAD,KACA,yCAEA,kBAACA,EAAA,EAAD,CAAKzC,UAAU,cACX,kBAACC,EAAA,EAAD,CAAQD,UAAU,OAAOoC,QAVR,WAC3B/B,ElB8B6B,uCAAM,WAAOA,EAAUC,GAAjB,uBAAAC,EAAA,sEAEjCF,EAAS,CACLjF,KjBxE0B,2BiBqEG,EAMGkF,IAAfxD,EANY,EAMzBD,UAAaC,SACf0D,EAAS,CACXC,QAAS,CACLC,cAAc,UAAD,OAAY5D,EAAS6D,SATT,SAYVC,IAAM0G,KAAN,gBAA4B,GAAI9G,GAZtB,gBAYzBM,EAZyB,EAYzBA,KAGRT,EAAS,CACLjF,KjBpF0B,yBiBqF1BE,QAASwF,IAjBoB,kDAuBjCT,EAAS,CACLjF,KjB3FyB,wBiB4FzBE,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,QACzC,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UA1Bb,0DAAN,2DkBpBf,uBAAGhB,UAAU,gBADjB,qBAMPmP,GAAiB,kBAAC,EAAD,MACjBC,GAAe,kBAAC,EAAD,CAASlP,QAAQ,UAAUkP,GAG1CL,GAAkB,kBAAC,EAAD,MAClBE,GAAgB,kBAAC,EAAD,CAAS/O,QAAQ,UAAU+O,GAC3C5T,EAAU,kBAAC,EAAD,MAAaI,EAAQ,kBAAC,EAAD,CAASyE,QAAQ,UAAUzE,GACvD,oCACA,kBAACsO,GAAA,EAAD,CAAOC,SAAO,EAACE,OAAK,EAACoE,YAAU,EAACrE,UAAQ,EAACjK,UAAU,YAC/C,+BACI,4BACI,kCACA,kCACA,oCACA,qCACA,wCACA,qCACA,yCAGR,+BACK9E,EAASwB,KAAI,SAAAf,GAAO,OACjB,wBAAIgJ,IAAKhJ,EAAQiI,KACb,4BAAKyL,KACL,4BAAK1T,EAAQiI,KACb,4BAAKjI,EAAQgE,MACb,gCAAMhE,EAAQ2I,OACd,4BAAK3I,EAAQ4T,SAAb,KACA,4BAAK5T,EAAQ6T,MAAb,KACA,4BAAI,kBAAC,gBAAD,CAAe/N,GAAE,yBAAoB9F,EAAQiI,IAA5B,UACjB,kBAAC3D,EAAA,EAAD,CAAQC,QAAQ,QAAQF,UAAU,UAAS,uBAAGA,UAAU,kBAGxD,kBAACC,EAAA,EAAD,CAAQC,QAAQ,SAASF,UAAU,SAASoC,QAAS,kBAAM8L,EAAcvS,EAAQiI,OAC7E,uBAAG5D,UAAU,yBAQzC,kBAAC,EAAD,CAAUzE,MAAOA,EAAOC,KAAMA,EAAM8G,SAAS,OCoEtCmN,GAzKW,SAAC,GAAwB,IAAtB3J,EAAqB,EAArBA,MAAO/G,EAAc,EAAdA,QAC1BsI,EAAYvB,EAAMC,OAAO3F,GADe,EAGtBpB,mBAAS,IAHa,mBAGvCW,EAHuC,KAGjCwJ,EAHiC,OAIpBnK,mBAAS,GAJW,mBAIvCsF,EAJuC,KAIhCoL,EAJgC,OAKpB1Q,mBAAS,IALW,mBAKvC+E,EALuC,KAKhC4L,EALgC,OAMpB3Q,mBAAS,IANW,mBAMvCwQ,EANuC,KAMhCI,EANgC,OAOd5Q,mBAAS,IAPK,mBAOvCuQ,EAPuC,KAO7BM,EAP6B,OAQN7Q,mBAAS,GARH,mBAQvC+H,EARuC,KAQzB+I,EARyB,OASR9Q,mBAAS,IATD,mBASvC8F,EATuC,KAS1BiL,EAT0B,OAUZ/Q,oBAAS,GAVG,mBAUvCgR,EAVuC,KAU5BC,EAV4B,KAcxC5P,EAAWa,cACXxF,EAAiByF,aAAY,SAAAlG,GAAK,OAAIA,EAAMS,kBAC1CL,EAA4BK,EAA5BL,QAASI,EAAmBC,EAAnBD,MAAOE,EAAYD,EAAZC,QAGlBK,EAAgBmF,aAAY,SAAAlG,GAAK,OAAIA,EAAMe,iBAChC0S,GAA8D1S,EAAvEX,QAA+BsT,GAAwC3S,EAA/CP,MAA6BmT,GAAkB5S,EAA3BF,QAIpDwJ,qBAAU,WAGFsJ,IACAvO,EAAS,CAAEjF,KpC/Bc,0BoCgCzBiF,EAAS,CAAEjF,KpCfa,yBoCgBxB2D,EAAQS,KAAK,uBAGR7D,EAAQgE,MAAQhE,EAAQiI,MAAQyD,GAIjC8B,EAAQxN,EAAQgE,MAChB+P,EAAS/T,EAAQ2I,OACjBqL,EAAShU,EAAQoI,OACjB6L,EAASjU,EAAQ6T,OACjBK,EAAYlU,EAAQ4T,UACpBO,EAAgBnU,EAAQoL,cACxBgJ,EAAepU,EAAQmJ,cATvBzE,EAAS+E,GAAmBiC,MAcrC,CAAChH,EAAUgH,EAAW1L,EAASiT,GAAe7P,IAGjD,IAAMmR,GAAiB,uCAAG,WAAO7Q,GAAP,uBAAAkB,EAAA,6DAChB4P,EAAO9Q,EAAEQ,OAAOuQ,MAAM,IACtBC,EAAW,IAAIC,UACZC,OAAO,QAASJ,GACzBF,GAAa,GAJS,SAOZzP,EAAS,CACXC,QAAS,CACL,eAAgB,wBATN,SAaKG,IAAM0G,KAAK,cAAe+I,EAAU7P,GAbzC,gBAaVM,EAbU,EAaVA,KACR6I,QAAQC,IAAI9I,GACZ6O,EAAS7O,GACTmP,GAAa,GAhBK,kDAkBlBtG,QAAQlO,MAAR,MACAwU,GAAa,GAnBK,0DAAH,sDAwCvB,OACI,oCACI,kBAAC,OAAD,CAAMxO,GAAI,qBAAsBzB,UAAU,sBAA1C,WAGC0O,IAAiB,kBAAC,EAAD,MACjBC,IAAe,kBAAC,EAAD,CAASzO,QAAQ,UAAUyO,IAC3C,kBAAC,GAAD,KACI,4CACCtT,EAAU,kBAAC,EAAD,MAAaI,EAAQ,kBAAC,EAAD,CAASyE,QAAQ,UAAUzE,GACvD,kBAAC0D,EAAA,EAAD,CAAMC,SA5BA,SAACC,GACnBA,EAAEC,iBAEFe,EnB+B2B,SAAC1E,GAAD,8CAAa,WAAO0E,EAAUC,GAAjB,uBAAAC,EAAA,sEAExCF,EAAS,CACLjF,KjBnG0B,2BiBgGU,EAMJkF,IAAfxD,EANmB,EAMhCD,UAAaC,SACf0D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY5D,EAAS6D,SAVF,SAajBC,IAAMiJ,IAAN,wBAA2BlO,EAAQiI,KAAOjI,EAAS6E,GAblC,gBAahCM,EAbgC,EAahCA,KAGRT,EAAS,CACLjF,KjBhH0B,yBiBiH1BE,QAASwF,IAlB2B,kDAwBxCT,EAAS,CACLjF,KjBvHyB,wBiBwHzBE,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,QACzC,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UA3BN,0DAAb,wDmB/BlBwP,CAAoB,CACzB5M,IAAKyD,EACL1H,OACA2E,QACAP,QACAyL,QACAD,WACAxI,eACAjC,mBAkBY,kBAAC3F,EAAA,EAAKoI,MAAN,CAAYC,UAAU,QAClB,kBAACrI,EAAA,EAAKsI,MAAN,cACA,kBAACtI,EAAA,EAAKO,QAAN,CAActE,KAAK,OAAO2E,YAAY,qBAClCD,MAAOH,EAAMC,SAAU,SAACP,GAAD,OAAO8J,EAAQ9J,EAAEQ,OAAOC,WAIvD,kBAACX,EAAA,EAAKoI,MAAN,CAAYC,UAAU,SAClB,kBAACrI,EAAA,EAAKsI,MAAN,qBACA,kBAACtI,EAAA,EAAKO,QAAN,CAActE,KAAK,SAAS2E,YAAY,cACpCD,MAAOwE,EAAO1E,SAAU,SAACP,GAAD,OAAOqQ,EAASrQ,EAAEQ,OAAOC,WAIzD,kBAACX,EAAA,EAAKoI,MAAN,CAAYC,UAAU,SAClB,kBAACrI,EAAA,EAAKsI,MAAN,qBACA,kBAACtI,EAAA,EAAKO,QAAN,CAActE,KAAK,OAAO2E,YAAY,kBAClCD,MAAOiE,EAAOnE,SAAU,SAACP,GAAD,OAAOsQ,EAAStQ,EAAEQ,OAAOC,UAGzD,kBAACX,EAAA,EAAKsR,KAAN,CAAWrQ,GAAG,aAAasL,MAAM,eAAegF,QAAM,EAAC9Q,SAAUsQ,KAChEF,GAAa,kBAAC,EAAD,OAGd,kBAAC7Q,EAAA,EAAKoI,MAAN,CAAYC,UAAU,SAClB,kBAACrI,EAAA,EAAKsI,MAAN,qBACA,kBAACtI,EAAA,EAAKO,QAAN,CAActE,KAAK,OAAO2E,YAAY,cAClCD,MAAO0P,EAAO5P,SAAU,SAACP,GAAD,OAAOuQ,EAASvQ,EAAEQ,OAAOC,WAIzD,kBAACX,EAAA,EAAKoI,MAAN,CAAYC,UAAU,YAClB,kBAACrI,EAAA,EAAKsI,MAAN,wBACA,kBAACtI,EAAA,EAAKO,QAAN,CAActE,KAAK,OAAO2E,YAAY,iBAClCD,MAAOyP,EAAU3P,SAAU,SAACP,GAAD,OAAOwQ,EAAYxQ,EAAEQ,OAAOC,WAI/D,kBAACX,EAAA,EAAKoI,MAAN,CAAYC,UAAU,gBAClB,kBAACrI,EAAA,EAAKsI,MAAN,4BACA,kBAACtI,EAAA,EAAKO,QAAN,CAActE,KAAK,SAAS2E,YAAY,qBACpCD,MAAOiH,EAAcnH,SAAU,SAACP,GAAD,OAAOyQ,EAAgBzQ,EAAEQ,OAAOC,WAIvE,kBAACX,EAAA,EAAKoI,MAAN,CAAYC,UAAU,eAClB,kBAACrI,EAAA,EAAKsI,MAAN,2BACA,kBAACtI,EAAA,EAAKO,QAAN,CAActE,KAAK,OAAO2E,YAAY,oBAClCD,MAAOgF,EAAalF,SAAU,SAACP,GAAD,OAAO0Q,EAAe1Q,EAAEQ,OAAOC,WAKrE,kBAACG,EAAA,EAAD,CAAQ7E,KAAK,SAAS8E,QAAQ,WAA9B,sBC5FTyQ,GAhES,SAAC,GAAwB,IAAtB5R,EAAqB,EAArBA,QACjBsB,GADsC,EAAZyF,MACf5E,eAEXtD,EAAauD,aAAY,SAAAlG,GAAK,OAAIA,EAAM2C,cACtCvC,EAA+BuC,EAA/BvC,QAASI,EAAsBmC,EAAtBnC,MAAOoC,EAAeD,EAAfC,WAIhBf,EADUqE,aAAY,SAAAlG,GAAK,OAAIA,EAAM4B,aACrCC,SACJuS,EAAQ,EAaZ,OAVA/J,qBAAU,WACFxI,EAASwF,QAGTjC,EV6GuB,uCAAM,WAAOA,EAAUC,GAAjB,uBAAAC,EAAA,sEAEjCF,EAAS,CACLjF,KrBxIqB,sBqBqIQ,EAMGkF,IAAfxD,EANY,EAMzBD,UAAaC,SACf0D,EAAS,CACXC,QAAS,CACLC,cAAc,UAAD,OAAY5D,EAAS6D,SATT,SAYVC,IAAMC,IAAN,eAA0BL,GAZhB,gBAYzBM,EAZyB,EAYzBA,KAGRT,EAAS,CACLjF,KrBpJqB,oBqBqJrBE,QAASwF,IAjBoB,kDAuBjCT,EAAS,CACLjF,KrB3JoB,mBqB4JpBE,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,QACzC,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UA1Bb,0DAAN,yDU/GvBjC,EAAQS,KAAK,YAIlB,CAAC1C,EAAUiC,EAASsB,IAIhB,oCAIFhF,EAAU,kBAAC,EAAD,MAAaI,EAAQ,kBAAC,EAAD,CAASyE,QAAQ,UAAUzE,GACvD,kBAACsO,GAAA,EAAD,CAAOC,SAAO,EAACE,OAAK,EAACoE,YAAU,EAACrE,UAAQ,EAACjK,UAAU,YAC/C,+BACI,4BACI,kCACA,wCACA,2CACA,qCACA,2CACA,gDACA,yCAGR,+BACKnC,EAAWnB,KAAI,SAAAY,GAAK,OACjB,wBAAIqH,IAAKrH,EAAMsG,KACX,4BAAKyL,KACL,4BAAK/R,EAAMsG,KACX,gCAAMtG,EAAM8M,YACZ,4BAAK9M,EAAML,KAAK0C,KAAhB,KACA,4BAAKrC,EAAM+M,OAAU,uBAAGrK,UAAU,eAAsB,uBAAGA,UAAU,wBAArE,KACA,4BAAK1C,EAAMiN,YAAe,uBAAGqG,MAAM,wBAA+B,uBAAGA,MAAM,eAA3E,KAEA,4BAAI,kBAAC,gBAAD,CAAenP,GAAE,kBAAanE,EAAMsG,MACpC,kBAAC3D,EAAA,EAAD,CAAQC,QAAQ,QAAQF,UAAU,UAAlC,qBCPjB6Q,OAlCf,WACE,OACE,kBAAC,gBAAD,KACE,kBAAC,EAAD,MACA,0BAAM7Q,UAAU,QACd,kBAACwB,EAAA,EAAD,KACE,kBAAC,IAAD,CAAOsP,KAAK,YAAYC,UAAW7H,GAAgB8H,OAAK,IACxD,kBAAC,IAAD,CAAOF,KAAK,oBAAoBC,UAAWJ,GAAiBK,OAAK,IACjE,kBAAC,IAAD,CAAOF,KAAK,qBAAqBC,UAAWjC,GAAmBkC,OAAK,IACpE,kBAAC,IAAD,CAAOF,KAAK,iCAAiCC,UAAWjC,GAAmBkC,OAAK,IAChF,kBAAC,IAAD,CAAOF,KAAK,uBAAuBC,UAAWxC,GAAgByC,OAAK,IACnE,kBAAC,IAAD,CAAOF,KAAK,kBAAkBC,UAAW/C,GAAgBgD,OAAK,IAC9D,kBAAC,IAAD,CAAOF,KAAK,cAAcC,UAAWxE,GAAayE,OAAK,IACvD,kBAAC,IAAD,CAAOF,KAAK,cAAcC,UAAWnF,GAAkBoF,OAAK,IAC5D,kBAAC,IAAD,CAAOF,KAAK,WAAWC,UAAWxF,GAAqByF,OAAK,IAC5D,kBAAC,IAAD,CAAOF,KAAK,YAAYC,UAAWjG,GAAgBkG,OAAK,IACxD,kBAAC,IAAD,CAAOF,KAAK,WAAWC,UAAWvH,GAAewH,OAAK,IACtD,kBAAC,IAAD,CAAOF,KAAK,SAASC,UAAWpI,GAAaqI,OAAK,IAClD,kBAAC,IAAD,CAAOF,KAAK,mBAAmBC,UAAWlL,GAAYmL,OAAK,IAC3D,kBAAC,IAAD,CAAOF,KAAK,oBAAoBC,UAAWlL,KAC3C,kBAAC,IAAD,CAAOiL,KAAK,oCAAoCC,UAAWlL,GAAamL,OAAK,IAC7E,kBAAC,IAAD,CAAOF,KAAK,IAAIC,UAAWlL,GAAYmL,OAAK,IAC5C,kBAAC,IAAD,CAAOF,KAAK,eAAeC,UAAW3K,KACtC,kBAAC,IAAD,CAAO0K,KAAK,qBAAqBC,UAAWtB,KAC5C,kBAAC,IAAD,CAAOqB,KAAK,aAAaC,UAAWjJ,OAIxC,kBAAC,EAAD,QCrCcmJ,QACW,cAA7BzD,OAAOzF,SAASmJ,UAEe,UAA7B1D,OAAOzF,SAASmJ,UAEhB1D,OAAOzF,SAASmJ,SAASpL,MACvB,2DCPNqL,IAASrP,OAEP,kBAAC,IAAD,CAAUpD,MAAOA,GACf,kBAAC,GAAD,OAEFwO,SAASkE,eAAe,SDmHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAlW,GACLkO,QAAQlO,MAAMA,EAAMuF,a","file":"static/js/main.bb01c23a.chunk.js","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {\r\n    productListReducer, productDetailsReducer, productDeleteReducer,\r\n    createProductReducer, updateProductReducer, productReviewReducer, getTopProducts\r\n} from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducer'\r\nimport {\r\n    userLoginReducer, userRegisterReducer,\r\n    userDetailsReducer, userUpdateProfileReducer,\r\n    userListReducer, userDeleteReducer, userUpdateReducer \r\n} from './reducers/userReducer'\r\nimport {\r\n    orderCreateReducer, orderDetailsReducer, orderPayReducer,\r\n    getMyOrdersReducer, getOrdersReducer, markOrderReducer\r\n} from './reducers/orderReducers'\r\n\r\n\r\n// Reducers in the store\r\nconst reducer = combineReducers({\r\n    productList: productListReducer, \r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    createProduct: createProductReducer,\r\n    updateProduct: updateProductReducer,\r\n    productReview: productReviewReducer,\r\n    getTopProducts,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userProfileUpdate: userUpdateProfileReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    getMyOrders: getMyOrdersReducer,\r\n    orderLists: getOrdersReducer,\r\n    orderMark: markOrderReducer,\r\n    userList: userListReducer,\r\n})\r\n\r\nconst middleware = [thunk]\r\n\r\n\r\n// Let get cart from local storage\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\nconst initialState = {\r\n    cart: {\r\n        cartItems: cartItemsFromStorage,\r\n        shippingAddress: shippingAddressFromStorage\r\n    },\r\n    userLogin: { userInfo: userInfoFromStorage}\r\n}\r\n\r\n\r\n    \r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\n\r\nexport default store","import {\r\n    PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAILED,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAILED,\r\n    PRODUCT_DETAILS_RESET,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAILED,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAILED,\r\n    PRODUCT_CREATE_RESET,\r\n    PRODUCT_UPDATE_RESET,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAILED,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAILED,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n    PRODUCT_TOP_PRODUCT_REQUEST,\r\n    PRODUCT_TOP_PRODUCT_SUCCESS,\r\n    PRODUCT_TOP_PRODUCT_FAILED\r\n} from '../constants/productConstant'\r\n\r\n// ALL PRODUCT FETCH REDUCER\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    // let use switch for our actions\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] }\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {\r\n                loading: false, products: action.payload.products, pages:\r\n                action.payload.pages, page: action.payload.page\r\n            }\r\n        case PRODUCT_LIST_FAILED:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// SINGLE PRODUCT DETAILS REDUCER\r\nexport const productDetailsReducer = (state = { product: { reviews: []} }, action) => {\r\n    // let use switch for our actions\r\n        switch (action.type) {\r\n            case PRODUCT_DETAILS_REQUEST:\r\n            return { loading: true, ...state }\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload }\r\n        case PRODUCT_DETAILS_FAILED:\r\n             return { loading: false, error: action.payload }\r\n        case PRODUCT_DETAILS_RESET:\r\n            return {product: {}}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// SINGLE PRODUCT DELETE REDUCER\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n    // let use switch for our actions\r\n        switch (action.type) {\r\n            case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true, }\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true}\r\n        case PRODUCT_DELETE_FAILED:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// For adding product\r\nexport const createProductReducer = (state = {}, action) => {\r\n    // let use switch for our actions\r\n        switch (action.type) {\r\n            case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true, }\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload}\r\n        case PRODUCT_CREATE_FAILED:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// For updating product\r\nexport const updateProductReducer = (state = { product:{} }, action) => {\r\n    // let use switch for our actions\r\n        switch (action.type) {\r\n            case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true, }\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload}\r\n        case PRODUCT_UPDATE_FAILED:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_UPDATE_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// LET REVIEW PRODUCTS\r\nexport const productReviewReducer = (state = {}, action) => {\r\n    // let use switch for our actions\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true, }\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case PRODUCT_CREATE_REVIEW_FAILED:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// Get top product for carousel\r\nexport const getTopProducts = (state = { products: []}, action) => {\r\n    // let use switch for our actions\r\n    switch (action.type) {\r\n        case PRODUCT_TOP_PRODUCT_REQUEST:\r\n            return { loading: true, products:[] }\r\n        case PRODUCT_TOP_PRODUCT_SUCCESS:\r\n            return { loading: false, products: action.payload }\r\n        case PRODUCT_TOP_PRODUCT_FAILED:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}","// All product constanst\r\nexport const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAILED = 'PRODUCT_LIST_FAILED'\r\n\r\n\r\n// Product details constant\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAILED = 'PRODUCT_DETAILS_FAILED'\r\nexport const PRODUCT_DETAILS_RESET = 'PRODUCT_DETAILS_RESET'\r\n\r\n// Product delete constant\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAILED = 'PRODUCT_DELETE_FAILED'\r\n\r\n// Create product constant\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAILED = 'PRODUCT_CREATE_FAILED'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\n// Update product constant\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAILED = 'PRODUCT_UPDATE_FAILED'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\n// Product review constant\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAILED = 'PRODUCT_CREATE_REVIEW_FAILED'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\n// get top products for carousel\r\nexport const PRODUCT_TOP_PRODUCT_REQUEST = 'PRODUCT_TOP_PRODUCT_REQUEST'\r\nexport const PRODUCT_TOP_PRODUCT_SUCCESS = 'PRODUCT_TOP_PRODUCT_SUCCESS'\r\nexport const PRODUCT_TOP_PRODUCT_FAILED = 'PRODUCT_TOP_PRODUCT_FAILED'\r\n","import {\r\n    CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_METHOD,\r\n    \r\n} from '../constants/cartConstant'\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n\r\n            // Let check if item already exists\r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\r\n                    \r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                } \r\n            }\r\n\r\n        case CART_REMOVE_ITEM: \r\n            return{\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n        \r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'","import {\r\n    USER_DETAILS_FAILED,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_RESET,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_LIST_FAILED,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LOGIN_FAILED, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS,\r\n    USER_LOGOUT, USER_PROFILE_UPDATE_FAILED, USER_PROFILE_UPDATE_REQUEST,\r\n    USER_PROFILE_UPDATE_SUCCESS, USER_REGISTER_FAILED,\r\n    USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS,\r\n    USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAILED, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAILED, USER_UPDATE_RESET\r\n} from \"../constants/userConstant\"\r\n\r\n\r\n// To handle user login\r\nexport const userLoginReducer = (state = { }, action) => {\r\n    // let use switch for our actions\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_LOGIN_FAILED:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LOGOUT:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// To handle user registration \r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    // let use switch for our actions\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_REGISTER_FAILED:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// To handle user details\r\nexport const userDetailsReducer = (state = { user:{} }, action) => {\r\n    // let use switch for our actions\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n        case USER_DETAILS_FAILED:\r\n            return { loading: false, error: action.payload }\r\n        case USER_DETAILS_RESET:\r\n            return { user: {}}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// To handle user details\r\nexport const userUpdateProfileReducer = (state = { }, action) => {\r\n    // let use switch for our actions\r\n    switch (action.type) {\r\n        case USER_PROFILE_UPDATE_REQUEST:\r\n            return { loading: true }\r\n        case USER_PROFILE_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload }\r\n        case USER_PROFILE_UPDATE_FAILED:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//Let list out all the users\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n    // let use switch for our actions\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true }\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload }\r\n        case USER_LIST_FAILED:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// Let delete user from the system\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    // let use switch for our actions\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true }\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case USER_DELETE_FAILED:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// Let delete user from the system\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n    // let use switch for our actions \r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true }\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case USER_UPDATE_FAILED:\r\n            return { loading: false, error: action.payload }\r\n        case USER_UPDATE_RESET:\r\n            return {\r\n                user: {}\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAILED = 'USER_LOGIN_FAILED'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\n// FOR USER REGISTRATION\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAILED = 'USER_REGISTER_FAILED'\r\n\r\n\r\n\r\n// FOR USER DETAILS\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAILED = 'USER_REGISTER_FAILED'\r\nexport const USER_DETAILS_RESET = 'USER_REGISTER_RESET'\r\n\r\n// DELETE ALL USERS\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAILED = 'USER_LIST_FAILED'\r\n\r\n// DELETE USER\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAILED = 'USER_REGISTER_FAILED'\r\n\r\n\r\n\r\n// FOR USER UPDATE\r\n\r\nexport const USER_PROFILE_UPDATE_REQUEST = 'USER_PROFILE_UPDATE_REQUEST'\r\nexport const USER_PROFILE_UPDATE_SUCCESS = 'USER_PROFILE_UPDATE_SUCCESS'\r\nexport const USER_PROFILE_UPDATE_FAILED = 'USER_PROFILE_UPDATE_FAILED '\r\nexport const USER_PROFILE_UPDATE_RESET = 'USER_PROFILE_UPDATE_RESET'\r\n\r\n// TO UPDATE USER BY ADMIN\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAILED = 'USER_UPDATE_FAILED '\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'","import {\r\n    ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAILED,\r\n    ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAILED,\r\n    ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAILED, ORDER_PAY_RESET, ORDER_LIST_MYORDER_FAILED,\r\n    ORDER_LIST_MYORDER_SUCCESS, ORDER_LIST_MYORDER_REQUEST, ORDER_LIST_MYORDER_RESET, ORDER_GET_SUCCESS,\r\n    ORDER_GET_FAILED, ORDER_GET_REQUEST, ORDER_MARK_REQUEST, ORDER_MARK_SUCCESS, ORDER_MARK_FAILED, ORDER_MARK_RESET\r\n} from '../constants/orderConstants'\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return { loading: true }\r\n        case ORDER_CREATE_SUCCESS:\r\n            return { loading: false, success: true, order: action.payload }\r\n        case ORDER_CREATE_FAILED:\r\n            return {loading: false, success: false, order: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// TO GET ORDER BY ID\r\nexport const orderDetailsReducer = (state = {loading: true, orderItems: [], shippingAddress:{} }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return { loading: false, order: action.payload }\r\n        case ORDER_DETAILS_FAILED:\r\n            return { loading: false,  order: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n// TO GET ORDER BY ID\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return { loading: true }\r\n        case ORDER_PAY_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case ORDER_PAY_FAILED:\r\n            return { error: action.payload }\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n// TO GET LOGGIN USER ORDERS\r\nexport const getMyOrdersReducer = (state = {myOrders: []}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_MYORDER_REQUEST:\r\n            return { loading: true }\r\n        case ORDER_LIST_MYORDER_SUCCESS:\r\n            return { loading: false, myOrders: action.payload }\r\n        case ORDER_LIST_MYORDER_FAILED:\r\n            return { error: action.payload }\r\n        case ORDER_LIST_MYORDER_RESET:\r\n            return { myOrders: []}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n// TO GET ALL ORDERS\r\nexport const getOrdersReducer = (state = { orderlists: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_GET_REQUEST:\r\n            return { loading: true }\r\n        case ORDER_GET_SUCCESS:\r\n            return { loading: false, orderlists: action.payload }\r\n        case ORDER_GET_FAILED:\r\n            return { error: action.payload }\r\n        // case ORDER_GET_RESET:\r\n        //     return { myOrders: [] }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// LET MARK AS ORDER\r\n// TO GET ALL ORDERS\r\nexport const markOrderReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_MARK_REQUEST:\r\n            return { loading: true }\r\n        case ORDER_MARK_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case ORDER_MARK_FAILED:\r\n            return { error: action.payload }\r\n        case ORDER_MARK_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAILED = 'ORDER_CREATE_FAILED'\r\n\r\nexport const ORDER_GET_REQUEST = 'ORDER_GET_REQUEST'\r\nexport const ORDER_GET_SUCCESS = 'ORDER_GET_SUCCESS'\r\nexport const ORDER_GET_FAILED = 'ORDER_GET_FAILED'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAILED = 'ORDER_DETAILS_FAILED'\r\n\r\nexport const ORDER_MARK_REQUEST = 'ORDER_MARK_REQUEST'\r\nexport const ORDER_MARK_SUCCESS = 'ORDER_MARK_SUCCESS'\r\nexport const ORDER_MARK_FAILED = 'ORDER_MARK_FAILED'\r\nexport const ORDER_MARK_RESET = 'ORDER_MARKE_RESET'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAILED = 'ORDER_PAY_FAILED'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MYORDER_REQUEST = 'ORDER_LIST_MYORDER_REQUEST'\r\nexport const ORDER_LIST_MYORDER_SUCCESS = 'ORDER_LIST_MYORDER_SUCCESS'\r\nexport const ORDER_LIST_MYORDER_FAILED = 'ORDER_LIST_MYORDER_FAILED'\r\nexport const ORDER_LIST_MYORDER_RESET = 'ORDER_LIST_MYORDER_RESET'","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\nfunction SearchBox({ history }) {\r\n    const [keyword, setKeyword] = useState('')\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (keyword.trim()) {\r\n            history.push(`/search/${keyword}`)\r\n        } else {\r\n            history.push('/')\r\n        }\r\n    }\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control type='text' name='q' onChange={(e) => setKeyword(e.target.value)}\r\n            placeholder='Search Product....' className='mr-sm-2 ml-sm-5'>\r\n            </Form.Control>\r\n            <Button type='submit' variant='outline-success' className='p-2'>\r\n                Search\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import axios from 'axios'\r\nimport {\r\n    USER_DETAILS_FAILED,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_RESET,\r\n    USER_LOGIN_FAILED, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS,\r\n    USER_LOGOUT, USER_PROFILE_UPDATE_REQUEST, USER_PROFILE_UPDATE_SUCCESS, USER_REGISTER_FAILED,\r\n    USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS,\r\n    USER_PROFILE_UPDATE_FAILED, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LIST_FAILED, USER_DELETE_FAILED, USER_DELETE_SUCCESS, USER_DELETE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_REQUEST, USER_UPDATE_FAILED\r\n} from \"../constants/userConstant\"\r\nimport { ORDER_LIST_MYORDER_RESET } from '../constants/orderConstants'\r\n\r\n// user login action\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        const { data } = await axios.post('/api/users/login', {email, password}, config)\r\n\r\n        // let dispatch success\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n        // dispatch due to error\r\n        dispatch({\r\n            type: USER_LOGIN_FAILED,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message : error.message\r\n        })  \r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({\r\n        type: USER_LOGOUT\r\n    })\r\n    dispatch({\r\n        type: ORDER_LIST_MYORDER_RESET\r\n    })\r\n    dispatch({\r\n        type: USER_DETAILS_RESET\r\n    })\r\n}\r\n\r\n// user register action\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        const { data } = await axios.post('/api/users', { name, email, password }, config)\r\n\r\n        // let dispatch success\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        // Let login user immediately after registration\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n        // dispatch due to error\r\n        dispatch({\r\n            type: USER_REGISTER_FAILED,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\n// user details\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const  { userLogin: { userInfo }} = getState()\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.get(`/api/users/${id}`, config)\r\n\r\n        // let dispatch success\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        // dispatch due to error\r\n        dispatch({\r\n            type: USER_DETAILS_FAILED,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// user PROFILE UPDATE\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_PROFILE_UPDATE_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.put(`/api/users/profile`, user, config)\r\n\r\n        // let dispatch success\r\n        dispatch({\r\n            type: USER_PROFILE_UPDATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        // dispatch due to error\r\n        dispatch({\r\n            type: USER_PROFILE_UPDATE_FAILED,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\n// Let get the list of all users\r\nexport const userListAction = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.get(`/api/users`, config)\r\n\r\n        // let dispatch success\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        // dispatch due to error\r\n        dispatch({\r\n            type: USER_LIST_FAILED,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// Let delete user\r\nexport const userDeleteAction = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        await axios.delete(`/api/users/${id}`, config)\r\n\r\n        // let dispatch success\r\n        dispatch({ type: USER_DELETE_SUCCESS })\r\n\r\n    } catch (error) {\r\n        // dispatch due to error\r\n        dispatch({\r\n            type: USER_DELETE_FAILED,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// Let update users by admin\r\nexport const userUpdateAction = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.put(`/api/users/${user._id}`, user, config)\r\n\r\n        // let dispatch success\r\n        dispatch({ type: USER_UPDATE_SUCCESS })\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        // dispatch due to error\r\n        dispatch({\r\n            type: USER_UPDATE_FAILED,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap' \r\nimport SearchBox from './SearchBox'\r\nimport { logout } from '../actions/userAction'\r\n\r\nfunction Header() {\r\n\r\n  // The dispatch\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const { userInfo } = userLogin\r\n  // Logout Handler\r\n  const logoutHandler = () => {\r\n    dispatch(logout())\r\n  }\r\n\r\n\r\n\r\n\r\nreturn <header>\r\n<Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n        <Container>\r\n    <LinkContainer to=\"/\">\r\n         <Navbar.Brand>Proshop</Navbar.Brand>   \r\n    </LinkContainer>\r\n  <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Route render={({ history }) => <SearchBox history={history} />}  />\r\n    <Nav className=\"ml-auto\">\r\n      <LinkContainer to=\"/cart\" >\r\n          <Nav.Link ><i className=\"fas fa-shopping-cart\"></i>Cart</Nav.Link>\r\n      </LinkContainer>\r\n          {userInfo ? (\r\n            <NavDropdown title={userInfo.name} id=\"username\">\r\n              <LinkContainer to='/profile'>\r\n                <NavDropdown.Item>Profile</NavDropdown.Item>\r\n              </LinkContainer>\r\n              <NavDropdown.Item onClick={logoutHandler}>\r\n                Logout\r\n              </NavDropdown.Item>\r\n            </NavDropdown>\r\n          ): <LinkContainer to = \"/login\">\r\n          <Nav.Link><i className=\"fas fa-user\"></i>Sign in</Nav.Link>\r\n      </LinkContainer>}\r\n          {userInfo && userInfo.isAdmin && (\r\n            <NavDropdown title='Admin' id=\"userlist\">\r\n              <LinkContainer to='/admin/userlist'>\r\n                <NavDropdown.Item>Users</NavDropdown.Item>\r\n              </LinkContainer>\r\n              <LinkContainer to='/admin/productlist'>\r\n                <NavDropdown.Item>Products</NavDropdown.Item>\r\n              </LinkContainer>\r\n                <LinkContainer to='/admin/orderlists'>\r\n                <NavDropdown.Item>Order Lists</NavDropdown.Item>\r\n              </LinkContainer>\r\n            </NavDropdown>\r\n        )}\r\n    </Nav>\r\n  </Navbar.Collapse>\r\n  </Container>\r\n</Navbar>\r\n        </header>\r\n    \r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction Footer() {\r\n    return <footer>\r\n        <Container>\r\n            <Row>\r\n                <Col className=\"text-center py-3\">\r\n                    Copyright &copy; Brainyworld Technology\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n        \r\n        </footer>\r\n    \r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nfunction Loader() {\r\n    return (\r\n        <Spinner animation=\"border\" role=\"status\" style={{width:\"100px\", height: \"100px\", margin: 'auto', display: 'block' }}>\r\n            <span className='sr-only'>Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Message = ({ variant, children }) => {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\nMessage.defaultProps = {\r\n    variant: 'info'\r\n}\r\nexport default Message\r\n","import React from 'react'\r\nimport propTypes from 'prop-types'\r\n\r\n\r\nfunction Rating({ value, text, color}) {\r\n    return (\r\n        <div className=\"rating\">\r\n            <span>\r\n            <i style={{color}} className={value >= 1 ? 'fas fa-star' : value >= 0.5 ? 'fas fa-star-half-alt' : 'far fa-star' }></i>\r\n            </span>\r\n              <span>\r\n            <i style={{color}} className={value >= 2 ? 'fas fa-star' : value >= 1.5 ? 'fas fa-star-half-alt' : 'far fa-star' }></i>\r\n            </span>\r\n              <span>\r\n            <i style={{color}} className={value >= 3 ? 'fas fa-star' : value >= 2.5 ? 'fas fa-star-half-alt' : 'far fa-star' }></i>\r\n            </span>\r\n              <span>\r\n            <i style={{color}} className={value >= 4 ? 'fas fa-star' : value >= 3.5 ? 'fas fa-star-half-alt' : 'far fa-star' }></i>\r\n            </span>\r\n              <span>\r\n            <i style={{color}} className={value >= 5 ? 'fas fa-star' : value >= 4.5 ? 'fas fa-star-half-alt' : 'far fa-star' }></i>\r\n            </span>\r\n            <span> {text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nRating.defaultProps = {\r\n    color: '#f8e825'\r\n}\r\n\r\nRating.propTypes = {\r\n    value: propTypes.number.isRequired,\r\n    text: propTypes.string.isRequired,\r\n    color: propTypes.string\r\n\r\n}\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\n\r\n\r\nfunction Product({ product }) {\r\n    return (\r\n        <Card className=\"my-3 p-3 rounded\">\r\n            <Link to={`product/${product._id}`}>\r\n                <Card.Img src={product.image} variant='top' />\r\n            </Link>\r\n\r\n            <Card.Body>\r\n               <Link to={`product/${product._id}`}>\r\n                    <Card.Title as='div'><strong>\r\n                        {product.name}\r\n                    </strong></Card.Title>\r\n                </Link>\r\n                <Card.Text as='div'>\r\n                   <Rating value={product.rating} text={`${product.numReviews} reviews`} />\r\n                </Card.Text>\r\n                <Card.Text as='h3'>\r\n                        ${product.price}\r\n                </Card.Text>\r\n        </Card.Body>\r\n        </Card>\r\n        \r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nconst Paginate = ({ pages, page, isAdmin = false, keyword='' }) => {\r\n    return pages > 1 && (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map(x => (\r\n                <LinkContainer key={x + 1} to={!isAdmin ? keyword ? `/search/${keyword}/page/${x + 1}` :\r\n                    `/page/${x + 1}` : `/admin/productlist/${x+1}`}>\r\n                    <Pagination.Item active={x+1 === page}>{x+1}</Pagination.Item>\r\n                    </LinkContainer>\r\n            \r\n            ))}\r\n        </Pagination>\r\n    )\r\n}\r\n\r\nexport default Paginate\r\n","import React from 'react'\r\nimport { Helmet } from \"react-helmet\"\r\n\r\nconst Meta = ({ title, description, keywords}) => {\r\n    return (\r\n        <Helmet>\r\n            <title>{title}</title>\r\n            <meta name='description' content={description}></meta>\r\n            <meta name='keywords' content={keywords}></meta>\r\n        </Helmet>\r\n    )\r\n}\r\nMeta.defaultProps = {\r\n    title: 'Welcome to Proshop',\r\n    description: 'We sell electronics and accessories',\r\n    keywords: 'electronics, phone, wristwatch'\r\n}\r\nexport default Meta\r\n","import axios from 'axios'\r\nimport {\r\n    PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAILED,\r\n    PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAILED,\r\n    PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAILED,\r\n    PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, PRODUCT_CREATE_FAILED,\r\n    PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_FAILED,\r\n    PRODUCT_CREATE_REVIEW_REQUEST, PRODUCT_CREATE_REVIEW_SUCCESS, PRODUCT_CREATE_REVIEW_FAILED,\r\n    PRODUCT_TOP_PRODUCT_REQUEST, PRODUCT_TOP_PRODUCT_SUCCESS, PRODUCT_TOP_PRODUCT_FAILED\r\n} from '../constants/productConstant'\r\n\r\n// Our list products \r\n// Redux-thung allow us to create function inside a function\r\nexport const listProducts = (keyword = '', pageNumber = '') => async(dispatch) => {\r\n    try {\r\n            // Dispatch to make request\r\n            dispatch({ type: PRODUCT_LIST_REQUEST })\r\n            const { data } = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`)\r\n            \r\n            // Dispatch for success\r\n            dispatch({\r\n                type: PRODUCT_LIST_SUCCESS,\r\n                payload: data\r\n            })\r\n         } catch (error) {\r\n            // dispatch due to error\r\n            dispatch({\r\n                type: PRODUCT_LIST_FAILED,\r\n                payload: error.response && error.response.data.message\r\n                         ? error.response.data.message :error.message\r\n            })\r\n        }\r\n}\r\n\r\n// Product details action\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        // Dispatch to make request\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n        // Dispatch for success\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        // dispatch due to error\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAILED,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n \r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n         await axios.delete(`/api/products/${id}`, config)\r\n\r\n        // let dispatch success\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        // dispatch due to error\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAILED,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\n// Let create product\r\nexport const createProductAction = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.post(`/api/products`, {}, config)\r\n\r\n        // let dispatch success\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        // dispatch due to error\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAILED,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// Let update product\r\nexport const updateProductAction = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.put(`/api/products/${product._id}`, product, config)\r\n\r\n        // let dispatch success\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        // dispatch due to error\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAILED,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\n// Let create a review\r\nexport const createProductReviewAction = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        await axios.post(`/api/products/${productId}/reviews`, review, config)\r\n\r\n        // let dispatch success\r\n        dispatch({type: PRODUCT_CREATE_REVIEW_SUCCESS})\r\n\r\n\r\n    } catch (error) {\r\n        // dispatch due to error\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAILED,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// List top products for carousel\r\nexport const listTopProducts = () => async(dispatch) => {\r\n    try {\r\n            // Dispatch to make request\r\n            dispatch({ type: PRODUCT_TOP_PRODUCT_REQUEST })\r\n            const { data } = await axios.get(`/api/products/top`)\r\n            \r\n            // Dispatch for success\r\n            dispatch({\r\n                type: PRODUCT_TOP_PRODUCT_SUCCESS,\r\n                payload: data\r\n            })\r\n         } catch (error) {\r\n            // dispatch due to error\r\n            dispatch({\r\n                type: PRODUCT_TOP_PRODUCT_FAILED,\r\n                payload: error.response && error.response.data.message\r\n                         ? error.response.data.message :error.message\r\n            })\r\n        }\r\n}","import React, {useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productAction'\r\n\r\n\r\n\r\nconst ProductCarousel = () => {\r\n    const dispatch = useDispatch()\r\n    const getTopProducts = useSelector(state=> state.getTopProducts)\r\n    const { loading, error, products } = getTopProducts\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts())\r\n    },[dispatch])\r\n\r\n    return loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n        <Carousel pause='hover' className='bg-dark'>\r\n            {products.map(product => (\r\n                <Carousel.Item key={product._id}>\r\n                    <Link to={`/products/${product._id}`}>\r\n                        <Image src={product.image} alt={product.name} fluid />\r\n                        <Carousel.Caption className='carousel-caption'>\r\n                            <h2>{product.name} (${product.price})</h2>\r\n                        </Carousel.Caption>\r\n                    </Link>\r\n                </Carousel.Item>\r\n            ))}\r\n        </Carousel>\r\n    )\r\n}\r\n\r\nexport default ProductCarousel\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Col, Row } from 'react-bootstrap'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Product from '../components/Product'\r\nimport Paginate from '../components/Paginate'\r\nimport Meta from '../components/Meta'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport { listProducts } from '../actions/productAction'\r\n\r\n\r\nfunction HomeScreen({ match }) {\r\n    const keyword = match.params.keyword\r\n    const pageNumber = match.params.pageNumber || 1\r\n\r\n\r\n    // Let create a dispatch here to use redux\r\n    const dispatch = useDispatch()\r\n\r\n    // Let bring in our reducer\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products, pages, page } = productList\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword, pageNumber))\r\n    }, [dispatch, keyword, pageNumber])\r\n    \r\n   \r\n\r\n    return (\r\n        <> \r\n        <Meta/> \r\n        {!keyword ? <ProductCarousel/> : <Link to='/' className='btn btn-dark'>Go Back</Link>}\r\n            <h1>Latest Product</h1>\r\n            {loading ? (<Loader />) : error ? (<Message variant='danger'>{error}</Message>) : (\r\n                <>\r\n                <Row>\r\n                    {products.map(product => (\r\n                        <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                            <Product product={product} />\r\n                        </Col>\r\n                    ))}\r\n                    </Row>   \r\n                    <Paginate pages={pages} page={page} keyword={keyword ? keyword : ''}   />\r\n                 </>\r\n            )}\r\n         \r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\r\nimport { listProductDetails, createProductReviewAction } from '../actions/productAction'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Rating from '../components/Rating'\r\nimport Meta from '../components/Meta'\r\nimport { PRODUCT_CREATE_REVIEW_RESET} from '../constants/productConstant'\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n\r\n    // qty of product\r\n    const [qty, setQty] = useState(1)\r\n\r\n    // For product review\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    // Let get the login users\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n    \r\n    // For the product review crate\r\n    const productReview = useSelector(state => state.productReview)\r\n    const { loading: loadingReview, error: errorReview, success: successReview} = productReview\r\n\r\n    useEffect(() => {\r\n        if (successReview) {\r\n            alert('Review Submitted')\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n        }\r\n        dispatch(listProductDetails(match.params.id ))\r\n    }, [dispatch, match, successReview])\r\n    \r\n    // Add to card handerler\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    // let review the product\r\n    const reviewHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReviewAction(match.params.id, {\r\n            rating,\r\n            comment\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link className=\"btn btn-light my-3\" to=\"/\">\r\n                Go Back\r\n            </Link>\r\n            {loading ? <Loader /> : error ? <Message variant='danger'> {error} </Message> : (\r\n                <>\r\n                    <Meta title={product.name} />\r\n                <Row>\r\n                    <Col md={6}>\r\n                        <Image src={product.image} alt={product.name} fluid />\r\n                    </Col>\r\n                    <Col md={3}>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h3>{product.name}</h3>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Rating value={product.rating} text={`${product.numReviews} reviews`} />\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                Price: ${product.price}\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                Description:\r\n                               {product.description}\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Col>\r\n\r\n                    <Col>\r\n                        <Card>\r\n                            <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            Price:\r\n                                    </Col>\r\n                                        <Col>\r\n                                            ${product.price}\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            Status:\r\n                                    </Col>\r\n                                        <Col>\r\n                                            {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n\r\n                                {/* for product counting */}\r\n                                {product.countInStock > 0 && (\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Qty</Col>\r\n                                            <Col>\r\n                                                <Form.Control as='select' value={qty} onChange={(e) =>\r\n                                                    setQty(e.target.value)}>\r\n                                                    {[...Array(product.countInStock).keys()].map(x => (\r\n                                                        <option key={x + 1} value={x + 1}> {x + 1}</option>\r\n                                                    ))}\r\n                                                </Form.Control>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                )}\r\n\r\n                                <ListGroup.Item>\r\n                                    <Button className=\"btn btn-block\" type=\"button\" onClick={addToCartHandler} disabled={product.countInStock === 0}>ADD TO CART</Button>\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col md={6}>\r\n                      <h2>Review Product</h2>\r\n                      {product.reviews.length === 0 && <Message variant='danger'>No Reviews yet</Message>}\r\n                      <ListGroup variant='flush'>\r\n                            {product.reviews.map(review => (\r\n                            <ListGroup.Item key={review._id}>\r\n                                <strong>{review.name}</strong>\r\n                                <Rating value={review.rating}/>\r\n                                 <p>{review.createdAt.substring(0, 10)}</p>\r\n                                 <p>{review.comment}</p>\r\n                            </ListGroup.Item>\r\n                          ))}\r\n                        <ListGroup.Item>\r\n                            <h2>Write a Customer review</h2>\r\n                            {errorReview && <Message variant='danger'>{errorReview}</Message>}\r\n                            {loadingReview && <Loader/>}\r\n                            {userInfo ? (\r\n                                <Form onSubmit={reviewHandler}>\r\n                                    <Form.Group controlId='rating'>\r\n                                    <Form.Label>Rating</Form.Label>\r\n                                       <Form.Control as='select' value={rating}\r\n                                        onChange={(e)=> setRating(e.target.value)}>\r\n                                           <option value=''>::Select::</option>\r\n                                           <option value='1'>1 - Poor</option>\r\n                                           <option value='2'>2 - Fair</option>\r\n                                           <option value='3'>3 - Good</option>\r\n                                           <option value='4'>4 - Very Good</option>\r\n                                           <option value='5'>5 - Excellent</option>\r\n                                        </Form.Control> \r\n                                    </Form.Group>\r\n                                    <Form.Group controlId='comment'>\r\n                                        <Form.Label>Enter Comment</Form.Label>\r\n                                        <Form.Control as='textarea' row='3' value={comment}\r\n                                        onChange={(e)=>setComment(e.target.value)}>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <Button type='submit' variant='primary'>Submit Review</Button>\r\n                                </Form>\r\n                            ) : (<Message variant='info'>\r\n                                Please <Link to='/login'>Sign in </Link> tp write review {' '}\r\n                            </Message>)}\r\n                        </ListGroup.Item>\r\n                      </ListGroup>\r\n                    </Col>\r\n                </Row>\r\n                </>\r\n            )}\r\n         \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","import axios from 'axios'\r\nimport {\r\n    CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD\r\n} from '../constants/cartConstant'\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => async (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id\r\n    })\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\n// TO save shipping\r\nexport const saveShippingAddress = (data) => async (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data\r\n    })\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\n// To save paymentMethod\r\nexport const savePaymentMethod = (data) => async (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data\r\n    })\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Form, Button, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartAction'\r\n\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n    const productId = match.params.id\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart\r\n\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n    // Remove from cartHandler\r\n    const removeFromCartHandler = (id) => {\r\n      dispatch(removeFromCart(id))\r\n    }\r\n\r\n    // CheckoutHanlder\r\n    const checkOutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length === 0 ? (\r\n                    <Message>\r\n                        Shopping Cart is empty <Link to='/'>Go Back</Link>\r\n                    </Message>) : (\r\n                        <ListGroup variant='flush'>\r\n                            {cartItems.map(item => (\r\n                                <ListGroup.Item key={item.product}>\r\n                                    <Row>\r\n                                        <Col md={2}>\r\n                                            <Image src={item.image} alt={item.name} fluid rounded />\r\n                                        </Col>\r\n                                        <Col md={3}>\r\n                                            <Link to={`/products/${item.product}`}>{item.name}</Link>\r\n                                        </Col>\r\n                                        <Col md={2}>\r\n                                            {item.price}\r\n                                        </Col>\r\n                                        <Col md={2}>\r\n                                            <Form.Control as='select' value={item.qty} onChange={(e) =>\r\n                                                dispatch(addToCart(item.product, Number(e.target.value)))}>\r\n                                                {[...Array(item.countInStock).keys()].map(x => (\r\n                                                    <option key={x + 1} value={x + 1}> {x + 1}</option>\r\n                                                ))}\r\n                                            </Form.Control>\r\n                                        </Col>\r\n                                        <Col md={2}>\r\n                                            <Button type='button' variant='light' onClick={() => \r\n                                                removeFromCartHandler(item.product)\r\n                                            }>\r\n                                                <i className=\"fas fa-trash\"></i>\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                        </ListGroup>\r\n                    )}\r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Subtotal ({cartItems.reduce((acc, item)=> acc + item.qty, 0)}) items</h2>\r\n                            ${cartItems.reduce((acc, item)=> acc + item.qty * item.price, 0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Button type='button' className='btn-block' disabled={cartItems.length === 0} onClick={checkOutHandler}>\r\n                                Proceed to Checkout\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\n\r\nconst FormContainer = ({ children }) => {\r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={12} md={6}> \r\n                {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Form, Button, Col, Row } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { login } from '../actions/userAction'\r\nimport FormContainer from '../components/FormContainer'\r\n\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    // redux at work\r\n    const dispatch = useDispatch()\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { loading, error, userInfo } = userLogin\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    // to disable login user not to visit login\r\n    useEffect(() => {\r\n        if(userInfo){\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        // Dispatch here\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n\r\n    return(\r\n    <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant='danger'>{error}</Message> }\r\n            {loading && <Loader/>}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address </Form.Label>\r\n                    <Form.Control type=\"email\" placeholder=\"Enter Email Address\"\r\n                        value={email} onChange={(e) => setEmail(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password </Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"Enter Email Address\"\r\n                        value={password} onChange={(e)=> setPassword(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Login\r\n                </Button>\r\n            </Form>\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    New Customer?{' '}\r\n                    <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n                        Register\r\n                     </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n    \r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Form, Button, Col, Row } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { register } from '../actions/userAction'\r\nimport FormContainer from '../components/FormContainer'\r\n\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    // redux at work\r\n    const dispatch = useDispatch()\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { loading, error, userInfo } = userRegister\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    // to disable login user not to visit login\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        // Dispatch here\r\n        if (password !== confirmPassword) {\r\n            setMessage('Password do not match')\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign Up</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name </Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter Fullname\"\r\n                        value={name} onChange={(e) => setName(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address </Form.Label>\r\n                    <Form.Control type=\"email\" placeholder=\"Enter Email Address\"\r\n                        value={email} onChange={(e) => setEmail(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password </Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"Enter Password\"\r\n                        value={password} onChange={(e) => setPassword(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='cpassword'>\r\n                    <Form.Label>Confirm Password </Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"Enter Confirm Password\"\r\n                        value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    SignUp\r\n                </Button>\r\n            </Form>\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Account already exists?{' '}\r\n                    <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                        Login\r\n                     </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Form, Button, Col, Row, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userAction'\r\nimport { getMyOrdersActions } from '../actions/orderAction'\r\n\r\n\r\nconst ProfileScreen = ({ history }) => {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    // redux at work\r\n    const dispatch = useDispatch()\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n    // To get my order lists\r\n    const getMyOrders = useSelector(state => state.getMyOrders)\r\n    const { loading: loadingMyOrders, error: errorMyOrders, myOrders } = getMyOrders\r\n\r\n    // Let check user login\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userProfileUpdate = useSelector(state => state.userProfileUpdate)\r\n    const { success } = userProfileUpdate\r\n\r\n    // to disable login user not to visit login\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user.name) {\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(getMyOrdersActions())\r\n                console.log(myOrders)\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, myOrders])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        // Dispatch here\r\n        if (password !== confirmPassword) {\r\n            setMessage('Password do not match')\r\n        } else {\r\n            dispatch(updateUserProfile({ id: user._id, name, email, password }))\r\n        }\r\n    }\r\n\r\n\r\n    return <Row>\r\n        <Col md={3}>\r\n            <h2>User Profile</h2>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {success && <Message variant='success'>Updated Successfully!</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name </Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter Fullname\"\r\n                        value={name} onChange={(e) => setName(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address </Form.Label>\r\n                    <Form.Control type=\"email\" placeholder=\"Enter Email Address\"\r\n                        value={email} onChange={(e) => setEmail(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password </Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"Enter Password\"\r\n                        value={password} onChange={(e) => setPassword(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='cpassword'>\r\n                    <Form.Label>Confirm Password </Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"Enter Confirm Password\"\r\n                        value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Update\r\n                </Button>\r\n            </Form>\r\n        </Col>\r\n        <Col md={9}>\r\n            <h2>My Orders</h2>\r\n            {loadingMyOrders ? <Loader /> : errorMyOrders ? <Message variant='danger'>{errorMyOrders}</Message> : (\r\n                <Table striped bordered hover reponsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>DATE</th>\r\n                            <th>TOTAL</th>\r\n                            <th>PAID</th>\r\n                            <th>DELIVERED</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {myOrders.map(order => (  \r\n                        <tr key={order._id}>\r\n                                <td>{order._id}</td>\r\n                                <td>{order.createdAt.substring(0, 10)}</td>\r\n                                <td>{order.totalPrice}</td>\r\n                                <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\r\n                                    <i className='fas fa-time' style={{ color: 'red' }}></i>\r\n                                )}</td>\r\n                                <td>{order.isDelivered ? order.deliveredAt.substring(0, 10) : (\r\n                                    <i className='fas fa-time' style={{ color: 'red' }}></i>\r\n                                )}</td>\r\n                                <td><LinkContainer to={`/orders/${order._id}`}>\r\n                                    <Button className=\"btn-sm\" variant='light' >Details</Button>    \r\n                                </LinkContainer></td>\r\n                        </tr>\r\n                        ))}\r\n                        <tr>\r\n\r\n                        </tr>\r\n                        <tr>\r\n\r\n                        </tr>\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n        </Col>\r\n    </Row>\r\n    \r\n}\r\n\r\nexport default ProfileScreen\r\n","import {\r\n    ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAILED, ORDER_DETAILS_FAILED,\r\n    ORDER_DETAILS_SUCCESS, ORDER_DETAILS_REQUEST, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAILED,\r\n    ORDER_LIST_MYORDER_REQUEST, ORDER_LIST_MYORDER_SUCCESS, ORDER_LIST_MYORDER_FAILED, ORDER_GET_REQUEST,\r\n    ORDER_GET_FAILED, ORDER_GET_SUCCESS, ORDER_MARK_FAILED, ORDER_MARK_SUCCESS, ORDER_MARK_REQUEST\r\n} from '../constants/orderConstants'\r\nimport axios from 'axios'\r\nexport const createOrderActions = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.post(`/api/orders`, order, config)\r\n\r\n        // let dispatch success\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        // dispatch due to error\r\n        dispatch({\r\n            type: ORDER_CREATE_FAILED,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message : error.message\r\n        })\r\n    }  \r\n}\r\n// get order details action\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.get(`/api/orders/${id}`, config)\r\n\r\n        // let dispatch success\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        // dispatch due to error\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAILED,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\n// update paid actions\r\nexport const orderPayActions = (orderId, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config)\r\n\r\n        // let dispatch success\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        // dispatch due to error\r\n        dispatch({\r\n            type: ORDER_PAY_FAILED,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// to get logged in user order\r\nexport const getMyOrdersActions = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MYORDER_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.get(`/api/orders/myorders`, config)\r\n\r\n        // let dispatch success\r\n        dispatch({\r\n            type: ORDER_LIST_MYORDER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        // dispatch due to error\r\n        dispatch({\r\n            type: ORDER_LIST_MYORDER_FAILED,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\n// Let get all the orders\r\nexport const getOrderListActions = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_GET_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.get(`/api/orders/`, config)\r\n\r\n        // let dispatch success\r\n        dispatch({\r\n            type: ORDER_GET_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        // dispatch due to error\r\n        dispatch({\r\n            type: ORDER_GET_FAILED,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// Let get all the orders\r\nexport const orderMarkActions = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_MARK_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.put(`/api/orders/${order._id}/deliver`, {}, config)\r\n\r\n        // let dispatch success\r\n        dispatch({\r\n            type: ORDER_MARK_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        // dispatch due to error\r\n        dispatch({\r\n            type: ORDER_MARK_FAILED,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport {LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction CheckoutSteps({ step1, step2, step3, step4 }) {\r\n    return (\r\n        <Nav className=\"justify-content-center mb-4\">\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>SignIn</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled> SignIn </Nav.Link>     \r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled> Shipping </Nav.Link>     \r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link> Payment </Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled> Payment </Nav.Link>     \r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link> Place order </Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled> Placeorder </Nav.Link>     \r\n                )}\r\n            </Nav.Item>\r\n\r\n        </Nav>\r\n\r\n    )\r\n    \r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartAction'\r\n\r\nfunction ShippingScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n    \r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2/>\r\n            <h2>Shipping </h2>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Address </Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter Address\"\r\n                        value={address} onChange={(e) => setAddress(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>City </Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter City\"\r\n                        value={city} onChange={(e) => setCity(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>PostalCode </Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter PostalCode\"\r\n                        value={postalCode} onChange={(e) => setPostalCode(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Country </Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter Country\"\r\n                        value={country} onChange={(e) => setCountry(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type=\"submit\" variant='primary'>\r\n                    Continue\r\n                </Button>\r\n\r\n\r\n                \r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartAction'\r\n\r\nfunction PaymentMethodScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    if (!shippingAddress) {\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('Paypal')\r\n \r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n            <h2>Payment Method</h2>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label as='legend'>Select Method </Form.Label>\r\n                <Col>\r\n                    <Form.Check type='radio' label='Paypal or credit card' id='Paypal'\r\n                        name=\"paymentMethod\" value=\"Paypal\" checked\r\n                        onChange={(e) => setPaymentMethod(e.target.value)}></Form.Check>\r\n                </Col>\r\n                </Form.Group>\r\n      \r\n         \r\n                <Button type=\"submit\" variant='primary'>\r\n                    Continue\r\n                </Button>\r\n\r\n\r\n\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentMethodScreen\r\n","import React, {useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\nimport { Button, Row, Col, Image, ListGroup } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrderActions } from '../actions/orderAction'\r\n\r\nfunction PlaceOrderScreen({ history }) {\r\n    const dispatch = useDispatch()\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    // Let declare a proper decimal\r\n    const addDecimal = (num) => {\r\n        return (Math.round(num * 100) / 100).toFixed(2)\r\n    } \r\n    // Calculate prices\r\n    cart.itemPrice = addDecimal(cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0))\r\n    // shipping price\r\n    cart.shippingPrice = addDecimal(cart.itemPrice > 100 ? 100 : 0)\r\n    cart.taxPrice = addDecimal(Number((0.15 * cart.itemPrice).toFixed(2)))\r\n\r\n\r\n\r\n    cart.totalPrice = (Number(cart.itemPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, success, error } = orderCreate\r\n    \r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`/orders/${order._id}`)\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [history, success])\r\n\r\n    const placeOrderHandler = () => {\r\n        dispatch(createOrderActions({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemPrice: cart.itemPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice\r\n        }))\r\n    }\r\n    return (\r\n        <>\r\n            <CheckoutSteps step1 step2 step3 step4 />  \r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Address </strong>\r\n                                 {cart.shippingAddress.address}, {cart.shippingAddress.city}\r\n                                {cart.shippingAddress.postalCode} {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {cart.paymentMethod}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItems.length === 0 ? <Message variant='danger'>Your cart is empty </Message> : \r\n                            (\r\n                                <ListGroup variant='flush'>\r\n                                        {cart.cartItems.map((item, index)=>(\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                  <Image src={item.image} alt={item.age} fluid rounded />      \r\n                                                </Col>    \r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`} >\r\n                                                        {item.name}\r\n                                                    </Link>\r\n                                                </Col>  \r\n                                                 <Col md={4}>\r\n                                                  {item.qty} x ${item.price} =  ${item.qty * item.price}   \r\n                                                </Col>    \r\n                                            </Row> \r\n                                        </ListGroup.Item>\r\n                                    ))}    \r\n                                </ListGroup>       \r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Order Summary</h2>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Items</Col>\r\n                                <Col>${cart.itemPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Shipping</Col>\r\n                                <Col>${cart.shippingPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Tax</Col>\r\n                                <Col>${cart.taxPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Total</Col>\r\n                                <Col>${cart.totalPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            {error && <Message variant='danger'>{error}</Message>}\r\n                        </ListGroup.Item>\r\n                        \r\n                        <ListGroup.Item>\r\n                            <Button type=\"button\" className=\"btn-block\" disabled={cart.cartItems === 0} onClick={placeOrderHandler}>\r\n                                Place Order\r\n                           </Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport axios from 'axios'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Button } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, orderPayActions, orderMarkActions } from '../actions/orderAction'\r\nimport { ORDER_PAY_RESET, ORDER_MARK_RESET } from '../constants/orderConstants'\r\n\r\nfunction OrderScreen({ match, history }) {\r\n\r\n    const orderId = match.params.id\r\n    const dispatch = useDispatch()\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, loading, error } = orderDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    // to get the payment reducer status\r\n     const orderPay = useSelector(state => state.orderPay)\r\n     const { loading: loadingPay, success: successPay } = orderPay\r\n    \r\n    const orderMark = useSelector(state => state.orderMark)\r\n    const { loading: loadingMark, success: successMark } = orderMark\r\n\r\n    \r\n    if (!loading) {\r\n        \r\n        // Let declare a proper decimal\r\n        const addDecimal = (num) => {\r\n            return (Math.round(num * 100) / 100).toFixed(2)\r\n        }\r\n        // Calculate prices\r\n        order.itemPrice = addDecimal(order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0))\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n\r\n        const addPayPalScript = async () => {\r\n            const  {data: clientId}  = await axios.get('/api/config/paypal')\r\n            const script = document.createElement('script')\r\n            script.type = 'text/javascript'\r\n            script.src =    `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n            script.async = true\r\n            script.onload = () => {\r\n                setSdkReady(true)\r\n            }\r\n            document.body.appendChild(script)\r\n        }\r\n\r\n        // check if not order or successPay is available to dispatch\r\n        if (!order || successPay || successMark) {\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n            dispatch({ type: ORDER_MARK_RESET })\r\n            dispatch(getOrderDetails(orderId))\r\n        } else if (!window.paypal) {\r\n            addPayPalScript()\r\n        } else {\r\n            setSdkReady(true)\r\n        }\r\n    }, [orderId, dispatch, order, successPay, successMark, history, userInfo])\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        console.log(paymentResult)\r\n        dispatch(orderPayActions(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(orderMarkActions(order))\r\n    }\r\n\r\n    return loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> :\r\n        <>\r\n            <h1>Order {order._id}</h1>\r\n                <Row>\r\n                    <Col md={8}>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Shipping</h2>\r\n                                <p><strong>Name:</strong> {order.user.name}</p>\r\n                                <p>\r\n                                    <strong>Email:</strong> {' '}\r\n                                    <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n                                </p>\r\n                                <p>\r\n                                    <strong>Address </strong>\r\n                                    {order.shippingAddress.address}, {order.shippingAddress.city}\r\n                                    {order.shippingAddress.postalCode} {order.shippingAddress.country}\r\n                                </p>\r\n                            {order.isDelivered ? <Message variant='success'> Delivered on {order.deliveredAt}</Message> :\r\n                                <Message variant='danger'>Not Delivered</Message>\r\n                            }\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <h2>Payment Method</h2>\r\n                                <p>\r\n                                    <strong>Method: </strong>\r\n                                    {order.paymentMethod}\r\n                                </p>\r\n                            {order.isPaid ? <Message variant='success'> Paid on {order.paidAt}</Message> :\r\n                                <Message variant='danger'>Not Paid</Message>\r\n                            }\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <h2>Order Items</h2>\r\n                                {order.orderItems.length === 0 ? <Message variant='danger'>Order is empty </Message> :\r\n                                    (\r\n                                        <ListGroup variant='flush'>\r\n                                            {order.orderItems.map((item) => (\r\n                                                <ListGroup.Item key={item._id}>\r\n                                                    <Row>\r\n                                                        <Col md={1}>\r\n                                                            <Image src={item.image} alt={item.age} fluid rounded />\r\n                                                        </Col>\r\n                                                        <Col>\r\n                                                            <Link to={`/product/${item.product}`} >\r\n                                                                {item.name}\r\n                                                            </Link>\r\n                                                        </Col>\r\n                                                        <Col md={4}>\r\n                                                            {item.qty} x ${item.price} =  ${item.qty * item.price}\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                            ))}\r\n                                        </ListGroup>\r\n                                    )}\r\n                            </ListGroup.Item>\r\n\r\n                        </ListGroup>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${order.itemPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${order.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>${order.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        {!order.isPaid && (\r\n                            <ListGroup.Item>\r\n                                {loadingPay && <Loader />}\r\n                                {!sdkReady ? <Loader /> : (\r\n                                    <PayPalButton amount={order.totalPrice} onSuccess={successPaymentHandler} />\r\n                                )}\r\n                            </ListGroup.Item>\r\n                            \r\n                        )} \r\n                        {loadingMark && <Loader/>}\r\n                        {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                            <ListGroup.Item>\r\n                                <Button type='button' className='btn btn-block'\r\n                                    onClick={deliverHandler}>\r\n                                    Mark As Delivered\r\n                                    </Button>\r\n                            </ListGroup.Item>\r\n                        )}\r\n                        </ListGroup>\r\n                    </Col>\r\n                </Row>\r\n        </>\r\n}\r\n\r\nexport default OrderScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { userListAction, userDeleteAction } from '../actions/userAction'\r\n\r\n\r\n\r\nconst UserListScreen = ({ location, history }) => {\r\n   const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users } = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete } = userDelete\r\n\r\n\r\n    useEffect(() => {\r\n        if(userInfo && userInfo.isAdmin){\r\n            dispatch(userListAction())\r\n        } else{\r\n            history.push('/login')\r\n        }\r\n    }, [dispatch, history, userInfo, successDelete])\r\n\r\n    const deleteHandler = (id) => {\r\n        if (window.confirm('Do you want to delete user')) {\r\n            dispatch(userDeleteAction(id))\r\n        }\r\n    }\r\n\r\n    return <>\r\n            <h1>Users</h1>\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                <Table striped hover responsive bordered className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>NAME</th>\r\n                            <th>EMAIL</th>\r\n                            <th>ADMIN</th>\r\n                            <th>ACTIONS</th>\r\n                            <th></th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {users.map(user => (\r\n                                <tr key={user._id}>\r\n                                    <td>{user._id}</td>\r\n                                    <td>{user.name}</td>\r\n                                    <td><a href={`mailto:${user.email}`}>{user.email}</a></td>\r\n                                    <td>{user.isAdmin ? (<i className='fas fa-check' style={{ color: 'green' }}></i>)\r\n                                        : (<i className='fas fa-times' style={{ color: 'red' }}></i>)\r\n                                    }\r\n                                    </td>\r\n                                    <td><LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                        <Button variant='light' className='btn-sm'><i className='fas fa-edit'></i></Button>\r\n                                    </LinkContainer>\r\n                                    \r\n                                        <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\r\n                                            <i className='fas fa-trash'></i>\r\n                                        </Button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n\r\n                </Table>\r\n\r\n            )}\r\n\r\n        </>\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserDetails, userUpdateAction } from '../actions/userAction'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstant'\r\n\r\n\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n    const userId = match.params.id\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setisAdmin] = useState(false)\r\n   \r\n\r\n    // redux at work\r\n    const dispatch = useDispatch()\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n    // For user update to know if success\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = userUpdate\r\n\r\n\r\n    \r\n\r\n    // to disable login user not to visit login\r\n    useEffect(() => {\r\n        // Let check if updat is successful\r\n        if (successUpdate) {\r\n            dispatch({ type: USER_UPDATE_RESET })\r\n            history.push('/admin/userlist')\r\n        } else {\r\n            if (!user.name || user._id !== userId) {\r\n                dispatch(getUserDetails(userId))\r\n                console.log(user)\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setisAdmin(user.isAdmin)\r\n            }\r\n        }\r\n\r\n    }, [dispatch, userId, user, successUpdate, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        // Dispatch here\r\n        dispatch(userUpdateAction({ _id: userId, name, email, isAdmin }))\r\n    \r\n    }\r\n \r\n\r\n    return (\r\n        <>\r\n        <Link to={'/admin/userlist'} className='btn btn-light my-3'>\r\n                Go Back\r\n        </Link>\r\n            {loadingUpdate && <Loader />}\r\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n            <FormContainer>\r\n                <h1>Edit User</h1>\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                    <Form onSubmit={submitHandler}>\r\n                        <Form.Group controlId='name'>\r\n                            <Form.Label>Name </Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter Fullname\"\r\n                                value={name} onChange={(e) => setName(e.target.value)}>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='email'>\r\n                            <Form.Label>Email Address </Form.Label>\r\n                            <Form.Control type=\"email\" placeholder=\"Enter Email Address\"\r\n                                value={email} onChange={(e) => setEmail(e.target.value)}>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='isAdmin'>\r\n                            \r\n                            <Form.Check type=\"checkbox\"\r\n                                label='isAdmin'\r\n                                checked={isAdmin}\r\n                                onChange={(e) => setisAdmin(e.target.checked)}>\r\n                            </Form.Check>\r\n                        </Form.Group>\r\n\r\n            \r\n\r\n                        <Button type='submit' variant='primary'>\r\n                            Update\r\n                </Button>\r\n                    </Form>\r\n                )}\r\n          \r\n\r\n            </FormContainer>\r\n        </>\r\n      \r\n    )\r\n\r\n}\r\n\r\nexport default UserEditScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport { listProducts, deleteProduct, createProductAction } from '../actions/productAction'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstant'\r\n\r\n\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n    const pageNumber = match.params.pageNumber || 1 \r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products, pages, page } = productList\r\n\r\n    // Let get the created products\r\n    const createProduct = useSelector(state => state.createProduct)\r\n    const { loading: loadingCreated, success: successCreated, error: errorCreated, product: productCreate } = createProduct\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    let count = 1\r\n\r\n\r\n    useEffect(() => {\r\n        // To reset the create product store\r\n        dispatch({ type: PRODUCT_CREATE_RESET })\r\n        // Check if user is login and is admin\r\n        if (!userInfo.isAdmin) {\r\n            history.push('/login')\r\n        }\r\n        \r\n        // Let check if product has been created\r\n        if (successCreated) {\r\n            history.push(`/admin/product/${productCreate._id}`)\r\n        } else {\r\n            dispatch(listProducts('', pageNumber))\r\n        }\r\n    }, [dispatch, history, userInfo, successDelete, successCreated, productCreate, pageNumber])\r\n\r\n    const deleteHandler = (id) => {\r\n        if (window.confirm('Do you want to delete user')) {\r\n            // DELETE PRODUCT\r\n            dispatch(deleteProduct(id))\r\n        }\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n      dispatch(createProductAction())\r\n    }\r\n    return <>\r\n        \r\n        <Row className='align-item-center'>\r\n            <Col>\r\n            <h1>Products</h1>\r\n            </Col>\r\n            <Col className='text-right'>\r\n                <Button className='my-3' onClick={createProductHandler}>\r\n                    <i className='fas fa-plus'></i> Create Product\r\n                </Button>\r\n            </Col>\r\n        </Row>\r\n        {/* For deleting product */}\r\n        {loadingDelete && <Loader />}\r\n        {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n\r\n        {/* For creating product */}\r\n        {loadingCreated && <Loader />}\r\n        {errorCreated && <Message variant='danger'>{errorCreated}</Message>}\r\n        {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n            <>\r\n            <Table striped hover responsive bordered className='table-sm'>\r\n                <thead>\r\n                    <tr>\r\n                        <th>SN</th>\r\n                        <th>ID</th>\r\n                        <th>NAME</th>\r\n                        <th>PRICE</th>\r\n                        <th>CATEGORY</th>\r\n                        <th>BRAND</th>\r\n                        <th>ACTIONS</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {products.map(product => (\r\n                        <tr key={product._id}>\r\n                            <td>{count++}</td>\r\n                            <td>{product._id}</td>\r\n                            <td>{product.name}</td>\r\n                            <td>${product.price}</td>\r\n                            <td>{product.category} </td>\r\n                            <td>{product.brand} </td>\r\n                            <td><LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                <Button variant='light' className='btn-sm'><i className='fas fa-edit'></i></Button>\r\n                            </LinkContainer>\r\n\r\n                                <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\r\n                                    <i className='fas fa-trash'></i>\r\n                                </Button>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n\r\n            </Table>\r\n        <Paginate pages={pages} page={page} isAdmin={true} />\r\n        </>\r\n        )}\r\n\r\n    </>\r\n}\r\n\r\nexport default ProductListScreen\r\n","import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listProductDetails, updateProductAction } from '../actions/productAction'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { PRODUCT_UPDATE_RESET, PRODUCT_DETAILS_RESET } from '../constants/productConstant'\r\n\r\n\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n    const productId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n\r\n    // redux at work\r\n    const dispatch = useDispatch()\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    // Let get update details on the hand so we can do anything we want to do with it.\r\n    const updateProduct = useSelector(state => state.updateProduct)\r\n    const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = updateProduct\r\n\r\n\r\n    // to disable login user not to visit login\r\n    useEffect(() => {\r\n        // Let check if updat is successful\r\n\r\n        if (successUpdate) {\r\n            dispatch({ type: PRODUCT_DETAILS_RESET })\r\n            dispatch({ type: PRODUCT_UPDATE_RESET })\r\n            history.push('/admin/productlist')\r\n        } else {\r\n\r\n            if (!product.name || product._id !== productId) {\r\n                dispatch(listProductDetails(productId))\r\n\r\n            } else {\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n            }\r\n        }\r\n\r\n\r\n    }, [dispatch, productId, product, successUpdate, history])\r\n\r\n    // Let handle file upload here\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n        formData.append('image', file)\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                },\r\n            }\r\n\r\n            const { data } = await axios.post('/api/upload', formData, config)\r\n            console.log(data)\r\n            setImage(data)\r\n            setUploading(false)\r\n        } catch (error) {\r\n            console.error(error)\r\n            setUploading(false) \r\n        }\r\n    }\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        // Dispatch here\r\n        dispatch(updateProductAction({\r\n            _id: productId,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            countInStock,\r\n            description\r\n        }))\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Link to={'/admin/productlist'} className='btn btn-light my-3'>\r\n                Go Back\r\n        </Link>\r\n            {loadingUpdate && <Loader />}\r\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n            <FormContainer>\r\n                <h1>Edit Product</h1>\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                    <Form onSubmit={submitHandler}>\r\n                        <Form.Group controlId='name'>\r\n                            <Form.Label>Name </Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter Product Name\"\r\n                                value={name} onChange={(e) => setName(e.target.value)}>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='price'>\r\n                            <Form.Label>Enter Price </Form.Label>\r\n                            <Form.Control type=\"number\" placeholder=\"Enter Price\"\r\n                                value={price} onChange={(e) => setPrice(e.target.value)}>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='image'>\r\n                            <Form.Label>Enter Image </Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter Image Url\"\r\n                                value={image} onChange={(e) => setImage(e.target.value)}>\r\n                            </Form.Control>\r\n\r\n                        <Form.File id='image-file' label='Choose Image' custom onChange={uploadFileHandler}></Form.File>\r\n                        {uploading && <Loader />}\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='brand'>\r\n                            <Form.Label>Enter Brand </Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter brand\"\r\n                                value={brand} onChange={(e) => setBrand(e.target.value)}>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='category'>\r\n                            <Form.Label>Enter Category </Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter category\"\r\n                                value={category} onChange={(e) => setCategory(e.target.value)}>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='countInStock'>\r\n                            <Form.Label>Enter CountInStock </Form.Label>\r\n                            <Form.Control type=\"number\" placeholder=\"Enter countInStock\"\r\n                                value={countInStock} onChange={(e) => setCountInStock(e.target.value)}>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='description'>\r\n                            <Form.Label>Enter Description </Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter Description\"\r\n                                value={description} onChange={(e) => setDescription(e.target.value)}>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n\r\n                        <Button type='submit' variant='primary'>\r\n                            Update Product\r\n                </Button>\r\n                    </Form>\r\n                )}\r\n\r\n\r\n            </FormContainer>\r\n        </>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default ProductEditScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderListActions } from '../actions/orderAction'\r\n\r\n\r\n\r\n\r\nconst OrderListScreen = ({ history, match }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const orderLists = useSelector(state => state.orderLists)\r\n    const { loading, error, orderlists } = orderLists\r\n\r\n    // Let confirm user login\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n    let count = 1\r\n\r\n\r\n    useEffect(() => {\r\n        if(!userInfo.isAdmin){\r\n            history.push('/login')\r\n        } else {\r\n            dispatch(getOrderListActions())\r\n        }\r\n    }, [userInfo, history, dispatch])\r\n\r\n\r\n\r\n    return <>\r\n\r\n\r\n     \r\n        {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n            <Table striped hover responsive bordered className='table-sm'>\r\n                <thead>\r\n                    <tr>\r\n                        <th>SN</th>\r\n                        <th>ORDER ID</th>\r\n                        <th>TOTAL PRICE</th>\r\n                        <th>BUYER</th>\r\n                        <th>PAID STATUS</th>\r\n                        <th>DELIVERED STATUS</th>\r\n                        <th>ACTIONS</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {orderlists.map(order => (\r\n                        <tr key={order._id}>\r\n                            <td>{count++}</td>\r\n                            <td>{order._id}</td>\r\n                            <td>${order.totalPrice}</td>\r\n                            <td>{order.user.name} </td>\r\n                            <td>{order.isPaid ? (<i className=\"fas fa-eye\"></i>) : (<i className=\"fas fa-check-square\"></i>)} </td>\r\n                            <td>{order.isDelivered ? (<i class=\"fas fa-check-square\"></i>) : (<i class=\"fas fa-eye\"></i>)} </td>\r\n                            \r\n                            <td><LinkContainer to={`/orders/${order._id}`}>\r\n                                <Button variant='light' className='btn-sm'>Details</Button>\r\n                            </LinkContainer>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n\r\n            </Table>\r\n\r\n        )}\r\n\r\n    </>\r\n}\r\n\r\nexport default OrderListScreen\r\n","import React from 'react';\nimport {BrowserRouter as Router, Route } from 'react-router-dom'\nimport { Container } from 'react-bootstrap'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentMethodScreen from './screens/PaymentMethodScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport OrderListScreen from './screens/OrderListScreen'\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <main className=\"py-3\">\n        <Container>\n          <Route path=\"/register\" component={RegisterScreen} exact />\n          <Route path=\"/admin/orderlists\" component={OrderListScreen} exact />\n          <Route path=\"/admin/productlist\" component={ProductListScreen} exact />\n          <Route path=\"/admin/productlist/:pageNumber\" component={ProductListScreen} exact />\n          <Route path=\"/admin/user/:id/edit\" component={UserEditScreen} exact />\n          <Route path=\"/admin/userlist\" component={UserListScreen} exact />\n          <Route path=\"/orders/:id\" component={OrderScreen} exact />\n          <Route path=\"/placeorder\" component={PlaceOrderScreen} exact />\n          <Route path=\"/payment\" component={PaymentMethodScreen} exact />\n          <Route path=\"/shipping\" component={ShippingScreen} exact />\n          <Route path=\"/profile\" component={ProfileScreen} exact />\n          <Route path=\"/login\" component={LoginScreen} exact />\n          <Route path=\"/search/:keyword\" component={HomeScreen} exact />\n          <Route path=\"/page/:pageNumber\" component={HomeScreen}  />\n          <Route path=\"/search/:keyword/page/:pageNumber\" component={HomeScreen}  exact/>\n          <Route path=\"/\" component={HomeScreen} exact />\n          <Route path=\"/product/:id\" component={ProductScreen} />\n          <Route path=\"/admin/product/:id\" component={ProductEditScreen} />\n          <Route path=\"/cart/:id?\" component={CartScreen} />\n        </Container>\n        \n      </main>\n      <Footer/>\n  \n    </Router>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// Let bring in redux\nimport { Provider } from 'react-redux'\nimport store from './store'\n// end // redux settings end here\nimport './bootstrap.min.css'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // Let replace the React.StrictMode with Provider\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}